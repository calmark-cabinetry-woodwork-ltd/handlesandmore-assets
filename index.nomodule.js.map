{"version":3,"file":"index.nomodule.js","sources":["../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../src/components/BaseElement.js","../src/components/utils.js","../src/components/ShopSubcategoryList.js","../src/components/ShopSubcategoryTile.js","../src/components/ShopCategoryView.js","../src/components/ShopCategoryProduct.js","../src/components/ShopCategoryFilter.js","../src/components/ShopCategoryPagination.js","../src/components/ShopWishlist.js","../node_modules/blackstone-ui/util/device.js","../node_modules/blackstone-ui/presenters/form/controls/range-slider.js","../node_modules/blackstone-ui/presenters/form/controls/touch-ripple.js","../node_modules/blackstone-ui/presenters/form/controls/check-box.js","../node_modules/blackstone-ui/elements/spinner.js","../node_modules/blackstone-ui/elements/icon.js","../node_modules/blackstone-ui/elements/btn.js","../node_modules/blackstone-ui/elements/btn-group.js","../src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import { LitElement, html, css } from \"lit-element\"\n\nclass BaseElement extends LitElement {\n    get root() {\n        return this.shadowRoot\n    }\n\n    static getOption(key) {\n        const val = window.localStorage.getItem(key) || null\n        return val ? JSON.parse(val) : null\n    }\n\n    static setOption(key, value) {\n        const val = value ? JSON.stringify(value) : null\n        window.localStorage.setItem(key, val)\n    }\n\n    render() {\n        return html`<p>Element</p>`\n    }\n\n    trigger(type, detail = {}, bubbles = true, composed = true) {\n        const ev = new CustomEvent(type, { detail, bubbles, composed })\n        this.dispatchEvent(ev)\n    }\n\n    on(type, callback) {\n        this.addEventListener(type, callback)\n    }\n\n    off(type, callback) {\n        this.removeEventListener(type, callback)\n    }\n}\n\nexport { BaseElement, html, css }\n",";(() => {\n    const url = new URL(window.location)\n    const tid = url.searchParams.get(\"tid\")\n    if (tid) {\n        const event_category = \"tagview\"\n        const event_label = tid\n        if (window && window.gtag) {\n            window.gtag(\"event\", \"tagview\", { event_category, event_label })\n        }\n        if (window && window.ga) {\n            const eventAction = \"tagview\"\n            const [eventCategory, eventLabel] = [event_category, eventLabel]\n            window.ga(\"send\", \"event\", {\n                eventAction,\n                eventCategory,\n                eventLabel\n            })\n        }\n        url.searchParams.delete(\"tid\")\n        history.pushState({}, document.title, `${url}`)\n    }\n})()\n\nexport const didNavigate = () => {\n    const e = new CustomEvent(\"didNavigate\", { bubbles: true, composed: true })\n    document.dispatchEvent(e)\n    if (window && window.gtag) {\n        window.gtag(\"event\", \"page_view\", {\n            page_title: document.title,\n            page_location: window.location.href,\n            page_path: window.location.pathname\n        })\n    }\n    if (window && window.ga) {\n        const eventAction = \"page_view\"\n        window.ga(\"send\", \"event\", {\n            eventAction,\n            page_title: document.title,\n            page_location: window.location.href,\n            page_path: window.location.pathname\n        })\n    }\n}\n\nexport const clickTrack = (eventCategory, eventLabel) => {\n    if (window && window.ga) {\n        const eventAction = \"click\"\n        window.ga(\"send\", \"event\", { eventAction, eventCategory, eventLabel })\n    }\n}\n\nexport const categories = (async () => {\n    return (await (await fetch(window.siteConfig.categoryEndpoint)).json())\n        .categories\n})()\n\nexport const aFetch = (request, opts = {}) => {\n    const controller = new AbortController()\n    const { signal } = controller\n\n    return {\n        abort: () => controller.abort(),\n        ready: fetch(request, { ...opts, signal })\n    }\n}\n\nexport const sizeImage = (url, size) => {\n    try {\n        if (!url) return \"\"\n        const u = new URL(url)\n        const components = u.pathname.split(\"/\")\n        const filename = components.pop()\n        const sz = `${size}x${size}x1`\n        components.push(sz)\n        components.push(filename)\n        u.pathname = components.join(\"/\")\n        return u.toString()\n    } catch (error) {\n        console.log({ error })\n        return \"\"\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate, categories } from \"./utils.js\"\n\nexport class ShopSubcategoryList extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            .subs {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 1rem;\n                margin: 1rem 0 0;\n            }\n            @media (min-width: 767px) {\n                .subs {\n                    grid-template-columns: repeat(5, 1fr);\n                }\n            }\n            .breadcrumbs {\n                margin: 0 0 1rem;\n            }\n            .breadcrumbs a {\n                color: #313333;\n                font-size: 0.85rem;\n                text-decoration: none;\n            }\n\n            .breadcrumbs a + a:before {\n                font-family: hfont;\n                content: var(--icon-content-caret-right);\n                font-size: 0.6em;\n                margin: 0 0.25em;\n                position: relative;\n                top: -1px;\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            current: { type: Object },\n            subs: { type: Array },\n            id: { type: String },\n            search: { type: String, reflect: true }\n        }\n    }\n\n    get breadcrumbs() {\n        return this.current.path\n            .slice(0)\n            .reverse()\n            .map(id => {\n                return this.categories.find(c => c.id == id)\n            })\n    }\n\n    navigate(init = false) {\n        const stub = document.location.pathname.replace(/^\\/|\\/$/g, \"\")\n        const current = this.categories.find(c => c.url == stub)\n        if (current) {\n            Object.assign(this, {\n                current,\n                id: current.id,\n                subs: this.categories\n                    .filter(c => c.path.slice(1).shift() == current.id)\n                    .sort((a, b) => {\n                        const asort = parseInt(a.sortOrder)\n                        const bsort = parseInt(b.sortOrder)\n                        return asort == bsort ? 0 : asort > bsort ? 1 : -1\n                    })\n            })\n        } else {\n            // Home / Search\n            Object.assign(this, {\n                current: { url: \"\", path: [] },\n                id: null,\n                subs: this.categories\n                    .filter(c => c.path.length == 1)\n                    .sort((a, b) => {\n                        const asort = parseInt(a.sortOrder)\n                        const bsort = parseInt(b.sortOrder)\n                        return asort == bsort ? 0 : asort > bsort ? 1 : -1\n                    })\n            })\n        }\n    }\n\n    async firstUpdated() {\n        this.categories = await categories\n        this.navigate(true)\n        document.addEventListener(\"didNavigate\", () => this.navigate())\n    }\n\n    fixHeaderHeights() {\n        const tiles = [...this.root.querySelectorAll(\"shop-subcategory-tile\")]\n        tiles.map(t => (t.headerHeight = 0))\n        const tops = {}\n        tiles\n            .map(t => {\n                const pos = t.headerPosition\n                tops[pos.top] = tops[pos.top] || []\n                tops[pos.top].push(pos.height)\n                return t\n            })\n            .map(t => {\n                const pos = t.headerPosition\n                const max = tops[pos.top].reduce(\n                    (acc, t) => (t > acc ? t : acc),\n                    0\n                )\n                t.headerHeight = max\n            })\n    }\n\n    render() {\n        const nav = (ev, url) => {\n            ev.preventDefault()\n            history.pushState({}, this.title, url)\n            didNavigate()\n            return false\n        }\n\n        if (!this.current) return\n        if (this.search) return\n\n        setTimeout(() => this.fixHeaderHeights(), 80)\n        setTimeout(() => this.fixHeaderHeights(), 500)\n\n        return html`\n            <div class=\"breadcrumbs\">\n                <a href=\"/\">Home</a>\n                ${this.breadcrumbs.map(page => {\n                    const url = `/${page.url}/`\n                    return html`\n                        <a @click=${ev => nav(ev, url)} href=${url}>\n                            ${page.title}\n                        </a>\n                    `\n                })}\n            </div>\n            <div class=\"subs\">\n                ${this.subs.map(\n                    sub => html`\n                        <shop-subcategory-tile\n                            id=${sub.id}\n                            title=${sub.title}\n                            url=${sub.url}\n                            description=${sub.description}\n                            image=${sub.image_url}\n                            path=${sub.path}\n                        ></shop-subcategory-tile>\n                    `\n                )}\n            </div>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate, sizeImage } from \"./utils.js\"\n\nexport class ShopSubcategoryTile extends BaseElement {\n    static get properties() {\n        return {\n            id: { type: String },\n            title: { type: String },\n            url: { type: String },\n            description: { type: String },\n            image: { type: String },\n            path: { type: Array }\n        }\n    }\n\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            a {\n                cursor: pointer;\n            }\n            .tile {\n                display: block;\n            }\n            img {\n                width: 100%;\n            }\n            header {\n                font-size: 20px;\n                font-weight: 700;\n                padding: 0.5rem 0;\n                box-sizing: border-box;\n            }\n        `\n    }\n\n    get headerPosition() {\n        const h = this.root.querySelector(\"header\")\n        return {\n            top: h.offsetTop,\n            height: h.offsetHeight\n        }\n    }\n\n    get headerHeight() {\n        return this.root.querySelector(\"header\").offsetHeight\n    }\n\n    set headerHeight(value) {\n        const px = value ? `${value}px` : \"auto\"\n        this.root.querySelector(\"header\").style.height = px\n    }\n\n    get defaultImage() {\n        return `<svg viewBox=\"0 0 550 550\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect x=\"0\" y=\"0\" width=\"550\" height=\"550\" fill=\"#c9c6c3\"/>\n            <rect x=\"210\" y=\"235\" width=\"110\" height=\"81\" rx=\"4\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.4)\" stroke-width=\"10\" />\n            <circle cx=\"244\" cy=\"266\" r=\"12\" fill=\"rgba(255,255,255,0.4)\"/>\n            <path d=\"M220 304Q226 282 248 292Q260 297 268 286C277 270,312 270,310 304Z\" fill=\"rgba(255,255,255,0.4)\"/>\n        </svg>`.replace(/\\n\\s+/gm, \"\")\n    }\n\n    get defaultImageBase64() {\n        const b64 = btoa(this.defaultImage)\n        return `data:image/svg+xml;base64,${b64}`\n    }\n\n    render() {\n        const nav = () => {\n            history.pushState({}, this.title, `/${this.url}/`)\n            didNavigate()\n        }\n\n        const image = sizeImage(this.image, 400)\n\n        return html`\n            <a @click=${nav} class=\"tile\">\n                <header>${this.title}</header>\n                <main>\n                    <img src=${image || this.defaultImageBase64} />\n                </main>\n                <footer></footer>\n            </a>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate, categories, aFetch } from \"./utils.js\"\n\nexport class ShopCategoryView extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: grid;\n                margin: 1rem 0 3rem;\n                gap: 1rem;\n                align-items: start;\n            }\n            .filters {\n                grid-row: 1 / auto;\n            }\n            .results {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 1rem;\n                grid-row: 2 / auto;\n            }\n            shop-category-pagination {\n                grid-column: span 2;\n            }\n\n            shop-category-filter {\n                display: none;\n                padding: 0 1rem;\n                margin: 0 0 5px;\n            }\n\n            .showfilter shop-category-filter {\n                display: block;\n                background: rgba(255, 255, 255, 0.7);\n                border-radius: 3px;\n            }\n\n            .mobile-filter-toggle a {\n                display: block;\n                border: 2px solid #ff4438;\n                color: #ff4438;\n                letter-spacing: 0.0625em;\n                text-transform: none;\n                text-decoration: none;\n                line-height: 2em;\n                font-weight: 400;\n                cursor: pointer;\n                padding: 0.5em 0em;\n                text-align: center;\n                margin: 0 0 1rem;\n                border-radius: 50px;\n            }\n            .showfilter .mobile-filter-toggle a {\n                color: white;\n                background-color: #ff4438;\n            }\n\n            @media (min-width: 767px) {\n                .mobile-filter-toggle {\n                    display: none;\n                }\n                :host {\n                    grid-template-columns: repeat(5, 1fr);\n                }\n                .filters {\n                    grid-row: 1 / auto;\n                }\n                .results {\n                    grid-row: 1 / auto;\n                    grid-template-columns: repeat(4, 1fr);\n                    grid-column: span 4;\n                }\n                shop-category-pagination {\n                    grid-column: span 4;\n                }\n                shop-category-filter {\n                    display: block;\n                    padding: 0;\n                    margin: 0 0 1rem;\n                }\n                .showfilter shop-category-filter {\n                    background: transparent;\n                }\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            url: { type: Object },\n            page: { type: Number },\n            title: { type: String },\n            limit: { type: Number },\n            count: { type: Number },\n            filters: { type: Array },\n            products: { type: Array },\n            type: { type: String },\n            search: { type: String, reflect: true },\n            showfilter: { type: Boolean },\n            resultId: { type: Number } // ensure well ordered fetch\n        }\n    }\n\n    constructor() {\n        super()\n        this.resultId = 0\n        this.products = []\n        this.filters = []\n        this.url = new URL(\"http://example.com\")\n        this.type = \"\"\n        this.title = \"\"\n        this.showfilter = window.innerWidth > 767\n        this.currentFetch = null\n        this.on(\"selection\", ev => {\n            const { key, selection } = ev.detail\n            const url = new URL(window.location)\n            url.searchParams.set(key, selection.join(\"|\"))\n            url.searchParams.set(\"page\", \"1\")\n            for (const [k, v] of url.searchParams.entries()) {\n                if (!v) url.searchParams.delete(k)\n            }\n            history.pushState({}, null, url.toString())\n            didNavigate()\n        })\n        this.on(\"page\", ev => {\n            const url = new URL(window.location)\n            url.searchParams.set(\"page\", ev.detail)\n            history.pushState({}, null, url.toString())\n            didNavigate()\n        })\n    }\n\n    get endpoint() {\n        return window.siteConfig.collectionEndpoint\n    }\n\n    async fetch(url) {\n        if (this.currentFetch) this.currentFetch.abort()\n\n        const slug = url.pathname.replace(/^\\/|\\/$/g, \"\")\n        const category = (await categories).find(c => c.url == slug) || {\n            type: \"index\",\n            title: \"Collection\"\n        }\n\n        const resultId = this.resultId + 1\n\n        // Clear screen\n        Object.assign(this, {\n            url,\n            products: null,\n            page: 1,\n            limit: 16,\n            count: 0,\n            title: category.title,\n            type: category.type,\n            resultId\n        })\n\n        if (category.type !== \"category\") {\n            return\n        }\n\n        // Fetch results\n        const endpoint = new URL(`${this.endpoint}`, window.origin)\n        // mirror window search params\n        for (const [k, v] of url.searchParams.entries()) {\n            endpoint.searchParams.set(k, v)\n        }\n        // add category search param\n        endpoint.searchParams.set(\"category\", category.id)\n        endpoint.searchParams.set(\"limit\", url.searchParams.get(\"limit\") || 16)\n        endpoint.searchParams.set(\"page\", url.searchParams.get(\"page\") || 1)\n\n        try {\n            this.currentFetch = aFetch(endpoint)\n            const res = await this.currentFetch.ready\n            const data = await res.json()\n            this.currentFetch = null\n\n            const currentUrl = new URL(window.location)\n\n            const filters = (data.filters || []).map(f => {\n                f.key = `filter[${f._id}]`\n                f.unit = f.unit || \"\"\n                const param = currentUrl.searchParams.get(f.key) || \"\"\n                f.selection = param.split(\"|\").filter(f => f)\n                return f\n            })\n\n            // console.log(resultId, this.resultId)\n            if (resultId == this.resultId) {\n                Object.assign(this, {\n                    page: data.page,\n                    limit: data.limit,\n                    count: data.count,\n                    filters: filters,\n                    products: data.products || []\n                })\n            }\n        } catch (e) {\n            if (e.name == \"AbortError\") {\n                console.log(`Fetch cancelled ${endpoint}`)\n            } else {\n                throw e\n            }\n        }\n    }\n\n    async fetchSearch(url, searchString) {\n        const resultId = this.resultId + 1\n\n        // Clear screen\n        Object.assign(this, {\n            url,\n            products: null,\n            page: 1,\n            limit: 16,\n            count: 0,\n            title: \"Search\",\n            type: \"category\",\n            resultId\n        })\n\n        // Fetch results\n        const endpoint = new URL(`${this.endpoint}`, window.origin)\n        // mirror window search params\n        for (const [k, v] of url.searchParams.entries()) {\n            endpoint.searchParams.set(k, v)\n        }\n        endpoint.searchParams.set(\"q\", searchString)\n        endpoint.searchParams.set(\"category\", \"\")\n        endpoint.searchParams.set(\"limit\", url.searchParams.get(\"limit\") || 16)\n        endpoint.searchParams.set(\"page\", url.searchParams.get(\"page\") || 1)\n        const res = await fetch(endpoint)\n        const data = await res.json()\n\n        const currentUrl = new URL(window.location)\n\n        const filters = (data.filters || []).map(f => {\n            f.key = `filter[${f._id}]`\n            f.unit = f.unit || \"\"\n            const param = currentUrl.searchParams.get(f.key) || \"\"\n            f.selection = param.split(\"|\").filter(f => f)\n            return f\n        })\n\n        // console.log(resultId, this.resultId)\n        if (resultId == this.resultId) {\n            Object.assign(this, {\n                page: data.page,\n                limit: data.limit,\n                count: data.count,\n                filters: filters,\n                products: data.products || []\n            })\n        }\n    }\n\n    async navigate(scroll = true) {\n        const url = new URL(window.location)\n        const scrollOptions = {\n            behavior: \"smooth\",\n            block: \"start\",\n            inline: \"nearest\"\n        }\n        const rect = this.getBoundingClientRect()\n        const shouldScroll =\n            scroll && this.scrollIntoView && rect && rect.y && rect.y < 0\n        const searchString = this.search\n\n        if (url.toString() != this.url.toString()) {\n            if (searchString) {\n                await this.fetchSearch(url, searchString)\n            } else {\n                await this.fetch(url)\n            }\n            if (shouldScroll) {\n                this.root\n                    .querySelector(\".results\")\n                    .scrollIntoView(scrollOptions)\n            }\n        }\n    }\n\n    firstUpdated() {\n        document.addEventListener(\"didNavigate\", () => this.navigate())\n        this.navigate(false)\n    }\n\n    get h1() {\n        return document.querySelector(\".page-title h1\")\n    }\n\n    set h1(value) {\n        const h = this.h1\n        if (h) h.innerText = value\n    }\n\n    render() {\n        this.h1 = this.title\n\n        if (this.type !== \"category\") {\n            return html``\n        }\n\n        const toggleFilters = ev => {\n            ev.preventDefault()\n            this.showfilter = !this.showfilter\n            return false\n        }\n\n        return html`\n            <div class=\"filters ${this.showfilter ? \"showfilter\" : \"\"}\">\n                <div class=\"mobile-filter-toggle\">\n                    <a href=\"#\" @click=${toggleFilters}>Filter Results</a>\n                </div>\n                ${this.filters.map(\n                    f => html`\n                        <shop-category-filter\n                            .key=${f.key}\n                            .display_name=${f.display_name}\n                            .type=${f.type}\n                            .values=${f.values}\n                            .selection=${f.selection}\n                            .unit=${f.unit}\n                            .presets=${f.presets}\n                        ></shop-category-filter>\n                    `\n                )}\n            </div>\n            <div class=\"results\">\n                ${this.products === null\n                    ? html` <p>Loading</p> `\n                    : html`\n                          ${this.products.length\n                              ? html`\n                                    ${this.products.map(\n                                        p => html`\n                                            <shop-category-product\n                                                .priceExcl=${p.priceExcl}\n                                                .url=${p.url}\n                                                .title=${p.title}\n                                                .fulltitle=${p.fulltitle}\n                                                .image_url=${p.image_url}\n                                                .product_set=${p.product_set}\n                                                .variants=${p.variants}\n                                            ></shop-category-product>\n                                        `\n                                    )}\n                                `\n                              : html` <p>No results</p> `}\n                      `}\n                <shop-category-pagination\n                    .page=${this.page}\n                    .limit=${this.limit}\n                    .count=${this.count}\n                ></shop-category-pagination>\n            </div>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { sizeImage } from \"./utils.js\"\n\nexport class ShopCategoryProduct extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            a {\n                display: block;\n                text-decoration: none;\n                color: #313333;\n            }\n            .product-image {\n                background-color: rgba(255, 253, 240, 0.3);\n                padding: 50%;\n                background-size: cover;\n                background-position: center;\n            }\n            .variants {\n                margin: 0.5rem 0;\n                display: grid;\n                grid-template-columns: repeat(5, 1fr);\n                gap: 0.5rem;\n            }\n            .price {\n                color: #ff4438;\n                font-weight: 600;\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            priceExcl: { type: String },\n            url: { type: String },\n            title: { type: String },\n            fulltitle: { type: String },\n            image_url: { type: String },\n            product_set: { type: Object },\n            variants: { type: Array }\n        }\n    }\n\n    get prices() {\n        return [this.priceExcl, ...this.variants.map(v => v.priceExcl)].map(p => parseFloat(p))\n    }\n\n    get price() {\n        const prices = this.prices\n        const highest = (prev, current) => current > 0 && current > prev ? current: prev\n        const lowest = (prev, current) => current > 0 && current < prev ? current: prev\n        let minPrice = prices.reduce(lowest, 0)\n        let maxPrice = prices.reduce(highest, 0)\n        if (minPrice == 0) return \"Call for pricing\"\n        if (minPrice == maxPrice) return `$${minPrice}`\n        return `From $${minPrice}`\n    }\n\n    render() {\n        const img = sizeImage(this.image_url, 400)\n\n        const singular = this.variants.length == 0\n\n        return html`\n            <a href=\"/${this.url}.html\" title=${this.title}>\n                <div\n                    class=\"product-image\"\n                    style=\"background-image: url(${img})\"\n                ></div>\n            </a>\n            ${singular\n                ? html``\n                : html`\n                      <div class=\"variants\">\n                          ${this.variants.slice(0, 5).map(v => {\n                              const img = sizeImage(v.image_url, 80)\n\n                              return html`\n                                  <a href=\"/${v.url}.html\" title=${v.title}>\n                                      <div\n                                          class=\"product-image\"\n                                          style=\"background-image: url(${img})\"\n                                      ></div>\n                                  </a>\n                              `\n                          })}\n                      </div>\n                  `}\n            <a href=\"/${this.url}.html\">\n                <div>${this.fulltitle}</div>\n                <div class=\"price\">${this.price}</div>\n            </a>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { clickTrack } from \"./utils.js\"\n\nconst toImp = val => {\n    if (Array.isArray(val)) {\n        return val.map(v => toImp(v))\n    }\n    return Math.round((parseFloat(val) / 25.4) * 16) / 16\n}\n\nconst toMM = val => {\n    if (Array.isArray(val)) {\n        return val.map(v => toMM(v))\n    }\n    return Math.round(parseFloat(val) * 25.5 * 10) / 10\n}\n\nexport class ShopCategoryFilter extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                margin: 0 0 2rem;\n            }\n            header {\n                position: relative;\n                font-family: \"Nunito Sans\", Helvetica, sans-serif;\n                color: #313333;\n                font-size: 0.9rem;\n                line-height: 1.5rem;\n                font-weight: 700;\n                letter-spacing: 0.05em;\n                text-transform: none;\n                cursor: pointer;\n                padding: 1rem 0;\n            }\n            header.selected {\n                color: #ff4438;\n            }\n            main {\n                display: none;\n            }\n            main.open {\n                display: block;\n                margin: 0;\n                padding: 0 0 2rem;\n            }\n            .toggle {\n                position: absolute;\n                top: 1rem;\n                right: 0;\n                line-height: 1.5rem;\n            }\n            .toggle:before {\n                font-family: hfont;\n                content: var(--icon-content-caret-right);\n                font-size: 10px;\n            }\n            .toggle.open:before {\n                content: var(--icon-content-caret-down);\n            }\n            .preset-display-unit {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                line-height: 1.65em;\n                gap: 4px;\n            }\n            .preset-display-unit > div {\n                display: block;\n                text-align: center;\n                padding: 0.35em 0em;\n                border-style: solid;\n                border-color: #bbb;\n                font-size: 0.8rem;\n                cursor: pointer;\n                border-width: 0px 0px 2px;\n            }\n            .preset-display-unit.unit-mm .mm,\n            .preset-display-unit.unit-in .in {\n                border-bottom-color: var(--fc-theme);\n                font-weight: bold;\n            }\n            @media (min-width: 767px) {\n                header {\n                    padding: 0;\n                }\n                main.open,\n                main {\n                    margin: 0;\n                    padding: 0;\n                }\n                .toggle {\n                    top: 0;\n                }\n            }\n            select {\n                font-size: 0.8rem;\n                box-sizing: border-box;\n                padding: 0.25rem;\n                color: #555;\n                background-color: #dcdad6;\n                border: 1px solid rgb(183, 182, 181);\n                border-radius: 5px;\n                box-shadow: rgb(0 0 0 / 5%) 0px 3px 5px;\n                outline: none;\n                width: 100%;\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            open: { type: Boolean },\n            key: { type: String },\n            display_name: { type: String },\n            type: { type: String },\n            values: { type: Array },\n            selection: { type: Array },\n            unit: { type: String },\n            presets: { type: Array }\n        }\n    }\n\n    get filterid() {\n        return this.key.replace(/.*\\[(.*)\\].*/, \"$1\")\n    }\n\n    constructor() {\n        super()\n        this.open = window.innerWidth > 767\n    }\n\n    render() {\n        const { filterid } = this\n        const settingid = `${filterid}-unit`\n        const displayUnit = BaseElement.getOption(settingid) || this.unit\n        const displayDefault = displayUnit == this.unit\n\n        const mainClass = this.open ? \"open\" : \"\"\n        const toggleClass = this.open ? \"toggle open\" : \"toggle\"\n\n        const toggleOpen = () => (this.open = !this.open)\n        const selectionClass = this.selection.length ? \"selected\" : \"\"\n\n        const imperialPresets = (this.presets || []).filter(p =>\n            /\\d+\\s*in$/i.exec(p.name)\n        )\n        const metricPresets = (this.presets || []).filter(p =>\n            /\\d+\\s*mm$/i.exec(p.name)\n        )\n        const showUnitPresets =\n            imperialPresets.length + metricPresets.length > 0\n\n        const presetDisplayUnit = displayDefault ? \"unit-mm\" : \"unit-in\"\n\n        const setUnit = unit => ev => {\n            BaseElement.setOption(settingid, unit)\n            this.unit = unit == \"alt\" ? \"in\" : \"mm\"\n            this.requestUpdate()\n        }\n\n        const translateSelect = (value) => {\n            const displayNames = {\n                popular: \"Popular\",\n                price: \"Price (Low to High)\",\n                price_1: \"Price (High to Low)\"\n            }\n            return displayNames[value] || value\n        }\n\n        const handleSelect = ev => {\n            const selection = [ev.target.value]\n            this.trigger(\"selection\", { key: this.key, selection })\n        }\n\n        return html`\n            <header class=${selectionClass} @click=${toggleOpen}>\n                ${this.display_name}\n                <span class=${toggleClass}></span>\n            </header>\n            <main class=${mainClass}>\n            ${this.type == \"Text\"\n                ? html`\n                    <shop-category-toggles\n                        .key=${this.key}\n                        .values=${this.values}\n                        .selection=${this.selection}\n                    ></shop-category-toggles>\n                `\n                : html``}\n            ${this.type == \"Select\"\n                ? html`\n                    <select @change=${handleSelect}>\n                        ${this.values.map(v => html`\n                            <option value=\"${v}\" ?selected=\"${v == (this.selection[0] || null)}\">\n                                ${translateSelect(v)}\n                            </option>\n                        `)}\n                    </select>\n                `\n                : html``}\n            ${this.type == \"MinMax\"\n                    ? html`\n                          ${showUnitPresets\n                              ? html`\n                                    <div\n                                        class=\"preset-display-unit ${presetDisplayUnit}\"\n                                    >\n                                        <div @click=${setUnit(\"\")} class=\"mm\">\n                                            Metric\n                                        </div>\n                                        <div\n                                            @click=${setUnit(\"alt\")}\n                                            class=\"in\"\n                                        >\n                                            Imperial\n                                        </div>\n                                    </div>\n                                    <shop-category-presets\n                                        .key=${this.key}\n                                        .selection=${this.selection}\n                                        .mcat=${displayDefault\n                                            ? \"metric\"\n                                            : \"imperial\"}\n                                        .presets=${displayDefault\n                                            ? metricPresets\n                                            : imperialPresets}\n                                    ></shop-category-presets>\n                                `\n                              : html`\n                                    <shop-category-minmax\n                                        .key=${this.key}\n                                        .values=${this.values}\n                                        .selection=${this.selection}\n                                        .label=${this.unit}\n                                        .unit=${this.unit}\n                                    ></shop-category-minmax>\n                                    <shop-category-presets\n                                        .key=${this.key}\n                                        .selection=${this.selection}\n                                        .presets=${this.presets}\n                                    ></shop-category-presets>\n                                `}\n                      `\n                    : html``}\n            </main>\n        `\n    }\n}\n\nclass ShopControl extends BaseElement {\n    static get properties() {\n        return {\n            key: { type: String },\n            values: { type: Array },\n            selection: { type: Array }\n        }\n    }\n    get filterid() {\n        return this.key.replace(/.*\\[(.*)\\].*/, \"$1\")\n    }\n}\n\nclass ShopCategoryToggles extends ShopControl {\n    static get styles() {\n        return css`\n            .label span {\n                font-size: 0.75rem;\n                color: #313333;\n                line-height: 1.8;\n            }\n            check-box {\n                position: relative;\n                left: -8px;\n                width: 100%;\n            }\n            .wrapper.tall {\n                max-height: 300px;\n                overflow-y: scroll;\n            }\n        `\n    }\n    constructor() {\n        super()\n        this.values = []\n        this.selection = []\n    }\n\n    get $wrapper() {\n        return this.root.querySelector(\".wrapper\")\n    }\n\n    render() {\n        const update = v => ev => {\n            const value = ev.detail.value\n            const selection = value\n                ? this.selection.concat(v)\n                : this.selection.filter(s => s !== v)\n            this.trigger(\"selection\", { key: this.key, selection })\n            this.selection = selection // cannot wait for async fetch to update this.selection\n        }\n\n        const wrapperClass =\n            this.values.length > 20 ? \"wrapper tall\" : \"wrapper\"\n\n        return html`\n            <div class=${wrapperClass}>\n                ${this.values.map(\n                    v => html`\n                        <check-box\n                            @change=${update(v)}\n                            type=\"switch\"\n                            label=${v}\n                            .value=${this.selection.includes(v)}\n                        >\n                            <span class=\"label\" slot=\"label\">\n                                <span>${v}</span>\n                            </span>\n                        </check-box>\n                    `\n                )}\n            </div>\n        `\n    }\n}\ncustomElements.define(\"shop-category-toggles\", ShopCategoryToggles)\n\nclass ShopCategoryMinmax extends ShopControl {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                padding: 0;\n            }\n            .range-slider-wrapper {\n                padding: 0 8px 3px;\n            }\n            .input-min-max {\n                display: grid;\n                grid-template-columns: 1fr 10px 1fr;\n                gap: 0;\n            }\n            .input-min-max div {\n                position: relative;\n                display: grid;\n                grid-template-columns: 1fr auto;\n                font-size: 0.85rem;\n                align-items: baseline;\n                opacity: 0.8;\n                color: rgb(49, 51, 51);\n                background-color: rgb(220, 218, 214);\n                padding: 3px;\n                border-bottom: 1px solid rgb(49, 51, 51);\n            }\n            .input-min-max div:after {\n                content: \" \";\n                display: block;\n                position: absolute;\n                background-color: rgb(255, 68, 56);\n                width: 100%;\n                height: 1px;\n                bottom: -1px;\n                left: 0px;\n                right: 0px;\n                opacity: 0;\n                transition: 0.1s opacity ease 0.1s;\n            }\n            .input-min-max div:focus-within:after {\n                bottom: -1px;\n                opacity: 1;\n                height: 2px;\n            }\n            input {\n                width: 100%;\n                box-sizing: border-box;\n                background-color: transparent;\n                border: none;\n                outline: none;\n                font-size: 0.8rem;\n            }\n            .display-unit {\n                display: none;\n            }\n            .display-unit.active {\n                display: block;\n            }\n            check-box {\n                position: relative;\n                left: -8px;\n                width: 100%;\n            }\n            .label span {\n                font-size: 0.75rem;\n                color: #313333;\n                line-height: 1.8;\n            }\n        `\n    }\n\n    get autoconvert() {\n        return `${this.label}`.toLowerCase() == \"mm\"\n    }\n\n    static get properties() {\n        return Object.assign(\n            {\n                min: { type: Number },\n                max: { type: Number },\n                label: { type: String },\n                unit: { type: String },\n                displayUnit: { type: String }\n            },\n            ShopControl.properties\n        )\n    }\n\n    render() {\n        const vals = this.values.map(v => parseFloat(v))\n        const min = vals.reduce(\n            (curr, acc) => (curr < acc ? curr : acc),\n            Infinity\n        )\n        const max = vals.reduce((curr, acc) => (curr > acc ? curr : acc), 0)\n        if (this.min != min) this.min = min\n        if (this.max != max) this.max = max\n\n        const selection = (\n            (this.selection.length && this.selection) || [this.min, this.max]\n        ).map(s => parseFloat(s))\n\n        const updateSelection = selection => {\n            const full = selection[0] == this.min && selection[1] == this.max\n            const s = full ? [] : selection\n            this.trigger(\"selection\", { key: this.key, selection: s })\n        }\n\n        const sliderChange = ev => {\n            const selection = ev.detail.value\n            updateSelection(selection)\n        }\n        const impSliderChange = ev => {\n            const selection = ev.detail.value\n            updateSelection(toMM(selection))\n        }\n\n        const inputChange = i => ev => {\n            let val = parseFloat(ev.target.value)\n            val = val > this.max ? this.max : val < this.min ? this.min : val\n            selection[i] = val\n            updateSelection(selection)\n        }\n\n        const impInputChange = i => ev => {\n            let val = toMM(ev.target.value)\n            val = val > this.max ? this.max : val < this.min ? this.min : val\n            selection[i] = val\n            updateSelection(selection)\n        }\n\n        const { key, autoconvert, filterid } = this\n\n        const settingid = `${filterid}-unit`\n        const displayUnit = BaseElement.getOption(settingid) || this.unit\n        const displayDefault = displayUnit == this.unit\n\n        const setUnit = ev => {\n            const { value } = ev.detail\n            const unit = value ? this.unit : \"alt\"\n            BaseElement.setOption(settingid, unit)\n            this.displayUnit = unit\n        }\n\n        return html`\n            <div class=\"display-unit ${displayDefault ? \"active\" : \"\"}\">\n                <div class=\"range-slider-wrapper\">\n                    <range-slider\n                        range\n                        step=\"1\"\n                        min=${this.min}\n                        max=${this.max}\n                        .value=${selection}\n                        style=\"width: 100%\"\n                        @change=${sliderChange}\n                    ></range-slider>\n                </div>\n                <div class=\"input-min-max\">\n                    <div>\n                        <input\n                            @change=${inputChange(0)}\n                            type=\"number\"\n                            min=${this.min}\n                            max=${selection[1]}\n                            .value=${selection[0]}\n                        />\n                        <span> ${this.label} </span>\n                    </div>\n                    <span></span>\n                    <div>\n                        <input\n                            @change=${inputChange(1)}\n                            type=\"number\"\n                            min=${selection[0]}\n                            max=${this.max}\n                            .value=${selection[1]}\n                        />\n                        <span> ${this.label} </span>\n                    </div>\n                </div>\n            </div>\n\n            ${autoconvert\n                ? html`\n                      <div\n                          class=\"display-unit ${displayDefault ? \"\" : \"active\"}\"\n                      >\n                          <div class=\"range-slider-wrapper\">\n                              <range-slider\n                                  range\n                                  step=\"0.0625\"\n                                  min=${toImp(this.min)}\n                                  max=${toImp(this.max)}\n                                  .value=${toImp(selection)}\n                                  style=\"width: 100%\"\n                                  @change=${impSliderChange}\n                              ></range-slider>\n                          </div>\n                          <div class=\"input-min-max\">\n                              <div>\n                                  <input\n                                      @change=${impInputChange(0)}\n                                      type=\"number\"\n                                      min=${toImp(this.min)}\n                                      max=${toImp(selection[1])}\n                                      step=\"0.0625\"\n                                      .value=${toImp(selection[0])}\n                                  />\n                                  <span>in</span>\n                              </div>\n                              <span></span>\n                              <div>\n                                  <input\n                                      @change=${impInputChange(1)}\n                                      type=\"number\"\n                                      min=${toImp(selection[0])}\n                                      max=${toImp(this.max)}\n                                      step=\"0.0625\"\n                                      .value=${toImp(selection[1])}\n                                  />\n                                  <span>in</span>\n                              </div>\n                          </div>\n                      </div>\n                      <check-box\n                          @change=${setUnit}\n                          type=\"switch\"\n                          .value=${displayDefault}\n                      >\n                          <span class=\"label\" slot=\"label\">\n                              <span>Metric</span>\n                          </span>\n                      </check-box>\n                  `\n                : html``}\n        `\n    }\n}\ncustomElements.define(\"shop-category-minmax\", ShopCategoryMinmax)\n\nclass ShopCategoryPresets extends BaseElement {\n    static get properties() {\n        return {\n            key: { type: String },\n            selection: { type: Array },\n            presets: { type: Array },\n            mcat: { type: String }\n        }\n    }\n    static get styles() {\n        return css`\n            :host {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 0.5rem;\n                margin: 1rem 0 1rem;\n            }\n            button {\n                background-color: #dcdad6;\n                color: #555;\n                box-shadow: none;\n                outline: none;\n                border: 1px solid #b7b6b5;\n                font-size: 0.8rem;\n                padding: 0.35em 0em;\n                box-shadow: 0 3px 5px rgba(0, 0, 0, 0.05);\n                transition: filter 200ms ease;\n                transition-timing-function: ease-in-out;\n                font-family: \"Nunito Sans\", sans-serif;\n                border-radius: 50px;\n                letter-spacing: 0.0625em;\n                text-transform: none;\n                text-decoration: none;\n                line-height: 2em;\n                font-weight: 400;\n                cursor: pointer;\n            }\n            button.active {\n                background-color: #ff4438;\n                border: 1px solid #ff4438;\n                color: white;\n                box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);\n            }\n        `\n    }\n    render() {\n        const isActive = preset => {\n            const nomatch = preset.values.find((v, i) => {\n                return v !== this.selection[i]\n            })\n            return nomatch ? \"\" : \"active\"\n        }\n        const update = preset => ev => {\n            // if active unset, else set\n            const selection = isActive(preset) == \"active\" ? [] : preset.values\n            if (selection.length && this.mcat) {\n                clickTrack(\"measurement\", this.mcat)\n            }\n            this.trigger(\"selection\", { key: this.key, selection })\n        }\n        return html`\n            ${this.presets.map(\n                p => html`\n                    <button @click=${update(p)} class=\"${isActive(p)}\">\n                        ${p.name}\n                    </button>\n                `\n            )}\n        `\n    }\n}\ncustomElements.define(\"shop-category-presets\", ShopCategoryPresets)\n","import { BaseElement, html, css } from \"./BaseElement.js\"\n\nexport class ShopCategoryPagination extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                text-align: right;\n                padding: 1rem 0;\n                margin: 1rem 0;\n            }\n            b-btn {\n                --theme: transparent;\n                --color: transparent;\n                --textColor: #456;\n                padding: 4px 0.25rem;\n            }\n            b-btn.active {\n                --theme: #ff4438;\n                --color: #ff4438;\n                --textColor: #fff;\n            }\n            b-btn-group {\n                border: 1px solid #9e9e9e;\n                border-radius: 5px;\n            }\n            b-btn:before {\n                font-family: hfont !important;\n                position: absolute;\n                top: 9px;\n                left: 9px;\n            }\n            b-btn.next:before {\n                content: var(--icon-content-caret-right);\n            }\n            b-btn.prev:before {\n                content: var(--icon-content-caret-left);\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            page: { type: Number },\n            limit: { type: Number },\n            count: { type: Number }\n        }\n    }\n\n    get pageCount() {\n        return Math.ceil(this.count / this.limit)\n    }\n\n    get pages() {\n        const output = {}\n        const pages = [...new Array(this.pageCount)].map((_, index) => {\n            const number = index + 1\n            return {\n                number,\n                index,\n                current: number == this.page,\n                next: this.page + 1 == number,\n                prev: this.page - 1 == number,\n                showInPagination: [-2, -1, 0, 1, 2].includes(this.page - number)\n            }\n        })\n\n        if (this.pageCount > 8) {\n            output.limitStart = this.page > 3\n            output.limitEnd = this.pageCount - this.page > 2\n            output.limitPages = true\n            output.entries = pages.filter(p => p.showInPagination)\n        } else {\n            output.limitPages = false\n            output.entries = pages\n        }\n\n        return output\n    }\n\n    render() {\n        if (!(this.page && this.limit)) return html``\n        const pages = this.pages\n        if (pages.length == 1) return html``\n        const prev = pages.entries.find(p => p.prev)\n        const next = pages.entries.find(p => p.next)\n        const nav = page => ev => {\n            this.trigger(\"page\", page)\n        }\n        return html`\n            <b-btn-group>\n                ${prev\n                    ? html`\n                          <b-btn class=\"prev\" @click=${nav(prev.number)}\n                              >&nbsp;</b-btn\n                          >\n                          <a href=\"?page=${prev.number}\" style=\"display: none\">Previous Page</a>\n                      `\n                    : html``}\n                ${pages.limitPages && pages.limitStart\n                    ? html` <b-btn>&hellip;</b-btn> `\n                    : html``}\n                ${pages.entries.map(\n                    p =>\n                        html`\n                            <b-btn\n                                class=${p.current ? \"active\" : \"\"}\n                                @click=${nav(p.number)}\n                            >\n                                ${p.number}\n                            </b-btn>\n                        `\n                )}\n                ${pages.limitPages && pages.limitEnd\n                    ? html` <b-btn>&hellip;</b-btn> `\n                    : html``}\n                ${next\n                    ? html`\n                          <b-btn class=\"next\" @click=${nav(next.number)}\n                              >&nbsp;</b-btn\n                          >\n                          <a href=\"?page=${next.number}\" style=\"display: none\">Next Page</a>\n                      `\n                    : html``}\n            </b-btn-group>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\n\nexport class ShopWishlist extends BaseElement {\n    static get properties() {\n        return {\n            accountid: { type: String },\n            wishlist: { type: Object }\n        }\n    }\n    static get styles() {\n        return css`\n            :host {\n                display: none;\n            }\n        `\n    }\n\n    updateEvent() {\n        const ev = new CustomEvent(\"wishlist\", {\n            detail: this,\n            bubbles: true,\n            composed: true\n        })\n        document.querySelector(\"body\").dispatchEvent(ev)\n    }\n\n    async firstUpdated() {\n        try {\n            if (this.accountid) {\n                this.wishlist = await (\n                    await fetch(\"/account/wishlist/?format=json\")\n                ).json()\n            } else {\n                this.wishlist = {}\n            }\n            this.updateEvent()\n        } catch (err) {\n            console.log({ err })\n        }\n    }\n    render() {\n        return html``\n    }\n}\n","import colorizeFavicon from './colorize-favicon'\n\nconst UA = navigator.userAgent\n\nexport const HandheldScanners = [\n    /Build\\/MRA58K/i // the android scanners Blackstone uses in production/warehouse\n]\n\nconst device = {\n\n    get is_ios(){ return device.isiOS}, // DEPRECATED\n    get is_android(){ return device.isAndroid }, // DEPRECATED\n    get is_mobile(){ return device.isMobile }, // DEPRECATED\n\n    get isWindows(){ return /Win/.test(UA) },\n    get isMac(){ return /Mac/.test(UA) },\n    get isLinux(){ return /Linux/.test(UA) },\n\n    get minScreenSize(){\n        return window.outerWidth < window.outerHeight ? window.outerWidth : window.outerHeight;\n    },\n\n    get isSmallDevice(){ return this.minScreenSize <= 699 },\n\n    get isiOS(){\n        return /iPad|iPhone|iPod/.test(UA)\n        || (device.isMac && navigator.standalone !== undefined ) // iPadOS 13+\n    },\n\n    get isiPad(){\n        return /iPad/.test(UA) || (!device.isiOS && device.isMac && navigator.standalone !== undefined )\n    },\n\n    get isAndroid(){\n        return /android/i.test(UA)\n    },\n\n    get isTouch(){\n        return 'ontouchstart' in window\n    },\n    \n    get isMobile(){\n        return device.isiOS || device.isAndroid\n    },\n\n    get isHandheldScanner(){\n        return !!HandheldScanners.find(patt=>patt.test(UA))\n    },\n\n    // https://developer.chrome.com/multidevice/user-agent\n    get isiOSChrome(){\n        return /CriOS/.test(UA)\n    },\n\n    get isElectron(){\n        return /Electron/.test(UA)\n    },\n\n    get electronVersion(){\n        let matches = UA.match(/Electron\\/([\\d\\.]+) /)\n        return matches ? matches[1] : 0\n    },\n\n    get isChromeInstalledApp(){\n        return this.isInstalled && /Chrome/.test(UA)\n    },\n\n    get isInstalled(){\n        return navigator.standalone || window.matchMedia('(display-mode: standalone)').matches\n    },\n\n    // alias\n    get isStandalone(){ return device.isInstalled },\n\n    applyClasses(){\n        const html = document.documentElement\n        if( !html ) return\n        html.classList.toggle('mobile', device.isMobile)\n        html.classList.toggle('ios', device.isiOS)\n        html.classList.toggle('electron', device.isElectron)\n        html.classList.toggle('android', device.isAndroid)\n        html.classList.toggle('mac', device.isMac)\n        html.classList.toggle('windows', device.isWindows)\n        html.classList.toggle('installed', device.isInstalled)\n    }\n    \n}\n\nexport default device\n\n// https://medium.com/@jonas_duri/enable-dark-mode-with-css-variables-and-javascript-today-66cedd3d7845\nexport const colorScheme = {\n\n    get isDarkMode(){ return window.matchMedia(\"(prefers-color-scheme: dark)\").matches },\n    get isLightMode(){ return window.matchMedia(\"(prefers-color-scheme: light)\").matches },\n    get isUnset(){ return window.matchMedia(\"(prefers-color-scheme: no-preference)\").matches },\n\n    get isSupported(){ return this.isDarkMode || this.isLightMode || this.isUnset },\n    \n    onChange(cb){\n        // first time, setup watchers\n        if( !this._watchers ){\n            this._watchers = new Map()\n\n            window.matchMedia(\"(prefers-color-scheme: dark)\").addListener(e => e.matches && this._dispatchChange('dark'))\n            window.matchMedia(\"(prefers-color-scheme: light)\").addListener(e => e.matches && this._dispatchChange('light'))\n        }\n\n        this._watchers.set(cb, cb)\n    },\n    \n    _dispatchChange(mode){\n        this._watchers.forEach(cb=>{\n            cb(mode)\n        })\n    },\n\n    apply({colorizeFaviconComposition=''}={}){\n        localStorage.setItem('theme-colorize-icon', \n            colorizeFaviconComposition||localStorage.getItem('theme-colorize-icon')||'lighten')\n        this.onChange(this.setTheme.bind(this))\n        this.setTheme()\n        this.setAccent()\n    },\n\n    get theme(){ return localStorage.getItem('theme') },\n    get accent(){ return localStorage.getItem('theme-accent') },\n\n    setTheme(theme){\n\n        const html = document.documentElement\n        let metaThemeColor = document.head.querySelector('meta[name=\"theme-color\"]')\n\n        // create the meta theme color if not found\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color\n        if( !metaThemeColor ){\n            metaThemeColor = document.createElement('meta')\n            metaThemeColor.setAttribute('name', 'theme-color')\n            document.head.appendChild(metaThemeColor)\n        }\n\n        html.removeAttribute('light')\n        html.removeAttribute('dark')\n\n        if( theme === undefined )\n            theme = localStorage.getItem('theme') || 'system'\n        \n        localStorage.setItem('theme', theme)\n\n        if( theme == 'system' )\n            theme = this.isDarkMode ? 'dark' : 'light'\n\n        html.setAttribute(theme, '')\n        metaThemeColor.content = this.getCssVar('theme-bgd')\n        localStorage.setItem('meta-theme-color', metaThemeColor.content)  \n    },\n\n    setAccent(accent){\n\n        const html = document.documentElement\n        let colorizeFaviconComposition = localStorage.getItem('theme-colorize-icon')\n\n        if( accent === undefined ){\n            accent = localStorage.getItem('theme-accent')\n        }else{\n            localStorage.setItem('theme-accent', accent)\n        }\n\n        if( accent ){\n            html.style.setProperty('--theme', `var(--${accent}, #${accent})`);\n            html.style.setProperty('--theme-chosen', `var(--${accent}, #${accent})`);\n\n            if( colorizeFaviconComposition )\n                colorizeFavicon(this.getCssVar('theme'), colorizeFaviconComposition)\n\n        }else{\n            html.style.removeProperty('--theme');\n            html.style.removeProperty('--theme-chosen');\n\n            colorizeFavicon(false)\n        }\n\n    },\n\n    getCssVar(name){\n        if( name[0] != '-' )\n            name = '--'+name\n        return getComputedStyle(document.documentElement).getPropertyValue(name).trim()\n    }\n    \n}\n\n","import { LitElement, html, css } from 'lit-element'\nimport device from '../../../util/device'\n\ncustomElements.define('range-slider', class extends LitElement{\n\n    static get properties(){return {\n        min: {type: Number},\n        max: {type: Number},\n        step: {type: Number},\n        range: {type: Boolean, reflect: true},\n        value: {type: Object},\n        label: {type: String, reflect: true}\n    }}\n\n    constructor(){\n        super()\n        this.mouseUp = this.mouseUp.bind(this)\n        this.mouseMove = this.mouseMove.bind(this)\n\n        this.label = 'auto'\n        this.range = false\n        this.min = 0\n        this.max = 100\n        this.step = 1\n\n        this.valMin = 0\n        this.valMax = 0\n        this.value = [0,0]\n    }\n\n    static get styles(){return css`\n        :host {\n            --size: 6px;\n            --thumbSize: 18px;\n            --color: var(--fc-theme);\n            --thumbColor: var(--color);\n            --bgd: var(--theme-text-accent, rgba(0,0,0,.4));\n            --padding: 10px;\n\n            display: inline-block;\n            vertical-align: middle;\n            position:relative;\n            width: 140px;\n            height: var(--size);\n            margin: 0 auto;\n            padding: var(--padding) 0;\n            cursor: pointer;\n            font-size: .9em;\n            user-select: none;\n            --label-rotation: 45deg;\n        }\n\n        rail, track {\n            display: block;\n            height: var(--size);\n            width: 100%;\n            background: var(--color);\n            border-radius: 6px;\n            position: absolute;\n            top: var(--padding);\n            left: 0;\n        }\n\n        rail {\n            background: var(--bgd);\n        }\n\n        thumb {\n            height: var(--thumbSize);\n            width: var(--thumbSize);\n            transform: translate(-50%, -50%);\n            position: absolute;\n            left: 0;\n            top: calc(var(--padding) + (var(--size) / 2));\n            background: var(--thumbColor);\n            border-radius: var(--thumbSize);\n            box-shadow: 0 0 0 1px var(--theme-bgd, var(--thumb-shadow, #fff)) inset\n        }\n\n        thumb:before {\n            content: '';\n            position: absolute;\n            height: 250%;\n            width: 250%;\n            left: -75%;\n            top: -75%;\n            background: var(--thumbColor);\n            opacity: .2;\n            border-radius: 30px;\n            z-index: -1;\n            transform: scale(.3);\n            transform-origin: center center;\n            opacity: 0;\n            transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);\n        }\n\n        thumb:hover:before {\n            transform: scale(.9);\n            opacity: .2;\n        }\n\n        thumb[active]:before {\n            transform: scale(1);\n            opacity: .2;\n        }\n\n        thumb[active] {\n            background: var(--color);\n        }\n\n        thumb > div {\n            position: absolute;\n            font-size: .9em;\n            background: var(--color);\n            color: #fff;\n            height: 2.2em;\n            width: 2.2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            bottom: 100%;\n            left: 50%;\n            position: absolute;\n            transform-origin: bottom left;\n            transform: translate(0%,-4px) rotate(calc(-1 * var(--label-rotation))) scale(0);\n            border-radius: 50% 50% 50% 0;\n            transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n            \n        }\n\n        :host([label*=\"bottom\"]) thumb > div{\n            bottom: auto;\n            top: calc(0% - 4px);\n            --label-rotation: -135deg;\n        }\n\n        thumb > div > span {\n            transform: rotate(var(--label-rotation))\n        }\n\n        :host([label*=\"show\"]) thumb > div,\n        thumb:hover > div,\n        thumb[active] > div {\n            transform: translate(0%,-4px) rotate(calc(-1 * var(--label-rotation))) scale(1);\n        }\n\n        :host([label*=\"none\"]) thumb > div {\n            display: none !important;\n        }\n\n        :host(:not([range])) thumb[min] {\n            display: none;\n        }\n\n        .labels {\n            display: flex;\n            justify-content: space-between;\n            margin-top: .75em;\n        }\n    `}\n\n    _polishVal(val){\n\n        val = parseFloat((Math.round(val / this.step) * this.step).toFixed(2))\n\n        if( val < this.min )\n            val = this.min\n        \n        if( val > this.max )\n            val = this.max\n        \n        return val\n    }\n\n    set value(val){\n\n        let oldVal = this.value\n        let oldMin = this.valMin\n        let oldMax = this.valMax\n        \n        if( typeof val == 'string' )\n            val = val.split(',').map(s=>parseFloat(s))\n\n        // setting both min and max\n        if( Array.isArray(val) ){\n            if( typeof val[0] !== 'number' || typeof val[1] !== 'number' ) return\n\n            val.sort((a,b) => a-b)\n\n            if( this.range )\n                this.valMin = this._polishVal(val[0])\n\n            this.valMax = this._polishVal(val[1])\n            \n            this.requestUpdate('value', oldVal)\n            return\n        }\n\n        if( typeof val !== 'number' ) return\n\n        val = this._polishVal(val)\n        // console.log(val);\n\n        let dmin = Math.abs(this.valMin - val);\n        let dmax = Math.abs(this.valMax - val)\n\n        if( this._active == 'max' && val == this.valMin ){\n            this.valMax = val\n            if( this.range )\n                this._active = 'min'\n        \n        }else if( this._active == 'min' && val == this.valMax ){\n            this.valMin = val\n            this._active = 'max'\n        }\n        else if( !this.range || (dmin == dmax && this.valMax > this.valMin && this._active == 'max') || dmax < dmin || val > this.valMax ){\n            this.valMax = val\n            this._active = 'max'\n        }else{\n            this.valMin = val\n            if( this.range )\n                this._active = 'min'\n        }\n\n        // this.setAttribute('value', this.value.join(','))\n        if( !this._mouseDown )\n            this._active = null\n\n        // nothing changed\n        if( oldMin == this.valMin && oldMax == this.valMax ) return\n    \n        this._didChange = true\n        \n        let setPropOn = this.parentElement && this.parentElement.tagName == 'FORM-CONTROL' \n                        ? this.parentElement : this\n\n        if( this.range ){\n            setPropOn.style.setProperty('--range-slider-min-val', `'${this.valMin}'`)\n            setPropOn.style.setProperty('--range-slider-max-val', `'${this.valMax}'`)\n        }else{\n            setPropOn.style.setProperty('--range-slider-val', `'${this.valMax}'`)\n        }\n\n        this.requestUpdate('value', oldVal)\n    }\n\n    get value(){\n        return this.range ? [this.valMin, this.valMax] : this.valMax;\n    }\n\n    connectedCallback(){\n        super.connectedCallback()\n        this.addEventListener(device.isMobile ? 'touchstart' : 'mousedown', this.mouseDown, true)\n    }\n\n    disconnectedCallback(){\n        super.disconnectedCallback()\n        this.removeEventListener(device.isMobile ? 'touchstart' : 'mousedown', this.mouseDown, true)\n    }\n\n    get _len(){ return this.max - this.min }\n    get _minLeft(){ return (this.valMin - this.min) / this._len * 100 }\n    get _maxLeft(){ return (this.valMax - this.min) / this._len * 100 }\n    get _trackLength(){ return this._maxLeft - this._minLeft }\n\n    get atMin(){ return (this.range ? this.valMin : this.valMax ) == this.min }\n    get atMax(){ return this.valMax == this.max }\n\n    reset(){\n        this.valMin = this.min\n        this.valMax = this.min\n        // this.valMax = this.range ? this.max : this.min\n        this.value = [this.valMin, this.valMax]\n        this.update()\n    }\n\n    render(){return html`\n        <rail></rail>\n        <track style=\"left:${this._minLeft}%; width:${this._trackLength}%\"></track>\n        <thumb min ?active=${this._active=='min'} style=\"left:${this._minLeft}%\">\n            <div><span>${this.valMin}</span></div>\n        </thumb>\n        <thumb max ?active=${this._active=='max'} style=\"left:${this._maxLeft}%\">\n            <div><span>${this.valMax}</span></div>\n        </thumb>\n        <div class=\"labels\">\n            <b-text sm muted><slot name=\"label:min\"></slot></b-text>\n            <b-text sm muted><slot name=\"label:max\"></slot></b-text>\n        </div>\n    `}\n\n    mouseDown(e){\n        if( !device.isMobile && e.which !== 1 ) return // normal click\n        window.addEventListener(device.isMobile?'touchend':'mouseup', this.mouseUp, true)\n        window.addEventListener(device.isMobile?'touchmove':'mousemove', this.mouseMove, true)\n        this._mouseDown = true\n        this.mouseMove(e)\n    }\n\n    mouseUp(){\n        this._active = null\n        this._mouseDown = false\n        window.removeEventListener(device.isMobile?'touchend':'mouseup', this.mouseUp, true)\n        window.removeEventListener(device.isMobile?'touchmove':'mousemove', this.mouseMove, true)\n        this.update()\n\n        if( this._didChange ){\n            this._didChange = false\n            \n            this.dispatchEvent(new CustomEvent('change', {\n                bubbles: true,\n                composed: true,\n                detail: {value: this.value}\n            }))\n        }\n    }\n\n    mouseMove(e){\n        \n        // already at the min/max, stop tracking mouse move until within range again\n        if( this._active == 'min' && e.pageX < this._lastMousePos && this.atMin ) return\n        if( this._active == 'max' && e.pageX > this._lastMousePos && this.atMax ) return\n        \n        this._lastMousePos = e.pageX\n\n        let rect = this.getBoundingClientRect()\n        let offset = {x: rect.x, y: rect.y}\n\n        // let mouseX = offset.x < e.pageX ? (e.offsetX + e.srcElement.offsetLeft) : e.pagex\n        let eventScreenX = e.touches ? e.touches[0].screenX : e.screenX\n        let mouseX = eventScreenX - window.screenX\n        let x = mouseX - offset.x\n        let percent = x / this.clientWidth * 100;\n\n        let val = ((percent / 100) * this._len) + this.min\n\n        let oldVal = this.value\n        this.value = val\n\n        if( oldVal != this.value )\n        this.dispatchEvent(new CustomEvent('changing', {\n            bubbles: true,\n            composed: true,\n            detail: {value: this.value}\n        }))\n    }\n\n})\n\nexport default customElements.get('range-slider')\n","import {css} from 'lit-element'\n\nconst styles = css`\n\n:host {\n\topacity: 0;\n\tposition: absolute;\n\t/* left: -7px;\n\ttop: -7px;\n\twidth: 48px;\n\theight: 48px; */\n\twidth: 120%;\n\theight: 120%;\n\tleft: -10%;\n\ttop: -10%;\n\tdisplay: block;\n\tz-index: 100;\n\tbackground: currentColor;\n\tborder-radius: 50px;\n}\n\n:host(.enter) {\n\topacity: 0.3;\n\t/* transform: scale(.5); */\n\tanimation: ripple-enter 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\tanimation-name: ripple-enter;\n}\n\n:host(.exit) {\n\topacity: 0;\n\t/* transform: scale(1); */\n\tanimation: ripple-exit 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\tanimation-name: ripple-exit;\n}\n\n\n@-webkit-keyframes ripple-enter {\n  0% {\n    opacity: 0.1;\n    transform: scale(0);\n  }\n  100% {\n    opacity: 0.3;\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes ripple-exit {\n  0% {\n    opacity: .3;\n\ttransform: scale(.7);\n  }\n  100% {\n    opacity: 0;\n\ttransform: scale(1.2);\n  }\n}\n@-webkit-keyframes ripple-pulsate {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(0.92);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n`\n\nclass TouchRippleElement extends HTMLElement {\n\t\n\tconstructor() {\n\t\tsuper()\n\t\t\n\t\tlet shadow = this.attachShadow({mode: 'open'})\n\t\tlet temp = document.createElement('template')\n\t\t\n\t\ttemp.innerHTML = `\n\t\t\t<style>${styles.cssText}</style>\n\t\t`\n\t\t\t\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t}\n\n\tripple(){\n\t\tthis.animate('exit')\n\t}\n\t\n\tenter(){\n\t\tthis.classList.add('enter')\n\t}\n\t\n\thide(){\n\t\tthis.classList.remove('exit')\n\t\tthis.classList.remove('enter')\n\t}\n\t\n\tanimate(str){\n\t\tthis.hide()\n\t\tthis.classList.add(str)\n\t\tsetTimeout(()=>this.classList.remove(str), 550)\n\t}\n\t\n}\n\ncustomElements.define('touch-ripple', TouchRippleElement)\n\nexport default customElements.get('touch-ripple')\n","import {css} from 'lit-element'\nimport './touch-ripple'\n\nconst styles = css`\n\n:host {\n\t--size: 1.6em;\n\t--color: var(--fc-theme);\n\t--colorDisabled: var(--fc-disabled-color, rgba(0, 0, 0, 0.26));\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tflex-grow: 0 !important;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tcursor: pointer;\n\toutline: none;\n}\n\n:host([hidden]) { display: none; }\n\n:host([checked]) svg.uncheck,\n:host(:not([checked])) svg.check {\n\tdisplay: none\n}\n\nmain {\n\tposition: relative;\n\tdisplay: inherit;\n}\n\n:host([placement=\"top\"]) { flex-direction: column-reverse; }\n:host([placement=\"bottom\"]) { flex-direction: column; }\n:host([placement=\"left\"]) { flex-direction: row-reverse; }\n:host([placement=\"right\"]) { flex-direction: row; }\n\nsvg {\n\tfill: currentColor;\n\twidth: var(--size);\n\theight: var(--size);\n\tdisplay: inline-block;\n\ttransition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\tuser-select: none;\n\tflex-shrink: 0;\n\tpadding: .25em;\n}\n\n.switch {\n\tdisplay: none\n}\n\n:host([type=\"switch\"]) svg { display: none; }\n\n:host([type=\"switch\"]) .switch {\n\tdisplay: inline-block;\n}\n\n:host([checked]) {\n\tcolor: var(--color)\n}\n\n:host([disabled]) {\n\tcursor: default;\n}\n\n:host([disabled]) svg {\n\tfill: var(--colorDisabled)\n}\n\n:host([disabled]) label {\n\tcolor: var(--colorDisabled);\n}\n\nmain label {\n\tcursor: pointer;\n}\n\n.indeterminate {\n\tdisplay: none;\n}\n\n.switch {\n\tposition: relative;\n\talign-items: center;\n\tmargin: .5em;\n}\n\n.switch:before, .switch:after {\n\tcontent: \"\";\n\tmargin: 0;\n\toutline: 0;\n\ttransition: all 0.3s ease;\n}\n\n.switch:before {\n\tdisplay: block;\n\twidth: 2em;\n\theight: 1em;\n\tbackground-color: #9E9E9E;\n\tborder-radius: 1em;\n}\n\n.switch:after {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translate(0, -50%);\n\twidth: 1.3em;\n\theight: 1.3em;\n\tbackground-color: #FAFAFA;\n\tborder-radius: 50%;\n\tbox-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.14), 0 2px 2px 0 rgba(0, 0, 0, 0.098), 0 1px 5px 0 rgba(0, 0, 0, 0.084);\n}\n\n\n:host([checked]) .switch:before {\n\tbackground-color: var(--color);\n\topacity: .5\n}\n\n:host([checked]) .switch:after {\n\tbackground-color: var(--color);\n\ttransform: translate(80%, -50%);\n}\n`\n\nclass CheckBoxElement extends HTMLElement {\n\n\tget key(){ return this.getAttribute('key')}\n\t\n\tconstructor() {\n\t\tsuper()\n\t\t\n\t\tlet shadow = this.attachShadow({mode: 'open'})\n\t\tlet temp = document.createElement('template')\n\t\t\n\t\tlet label = this.getAttribute('label') || '<slot name=\"label\"></slot>'\n\t\t\n\t\ttemp.innerHTML = `\n\t\t\t<style>\n\t\t\t${styles.cssText}\n\t\t\t</style>\n\t\t\t<main>\n\t\t\t\t<svg class=\"uncheck\" focusable=\"false\" viewBox=\"0 0 24 24\"><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"></path></svg>\n\t\t\t\t<svg class=\"check\" focusable=\"false\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path></svg>\n\t\t\t\t<div class=\"switch\"></div>\n\t\t\t\t<touch-ripple></touch-ripple>\n\t\t\t</main>\n\t\t\t<label>${label}</label>\n\t\t\t`\n\t\t\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t\t\n\t\tthis.ripple = this.shadowRoot.querySelector('touch-ripple')\n\t\t\n\t\tthis.addEventListener('click', this._onClick.bind(this))\n\t\t\n\t\tthis.addEventListener('keydown', e=>{\n\t\t\tif( ['Space', 'Enter'].includes(e.code) )\n\t\t\t\tthis._onClick()\n\t\t})\n\t\t\n\t\tthis.addEventListener('focus', e=>{\n\t\t\tif( e.relatedTarget && e.relatedTarget != this)\n\t\t\t\tthis.ripple.enter()\n\t\t})\n\t\t\n\t\tthis.addEventListener('blur', e=>{\n\t\t\tif( e.relatedTarget && e.relatedTarget != this)\n\t\t\t\tthis.ripple.hide()\n\t\t})\n\t}\n\t\n\tconnectedCallback(){\n\t\tif( !this.hasAttribute('tabindex') )\n\t\t\tthis.setAttribute('tabindex', '0')\n\t}\n\t\n\t_onClick(){\n\t\t\n\t\tif( this.disabled ) return\n\t\t\n\t\tthis.ripple.ripple()\n\t\t\n\t\tthis.checked = !this.checked\n\t\t\n\t\tvar event = new CustomEvent('change', {\n\t\t\tbubbles: true,\n\t\t\tcomposed: true,\n\t\t\tdetail: {\n\t\t\t\tvalue: this.checked\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.dispatchEvent(event)\n\t\t\n\t\t// this.blur()\n\t}\n\t\n\tset checked(val){\n\t\tif( val === '0' || val === '' ) val = false\n\t\tval ? this.setAttribute('checked', '') : this.removeAttribute('checked')\n\t}\n\t\n\tget checked(){ return this.hasAttribute('checked') }\n\tget value(){ return this.checked }\n\tset value(val){ this.checked = val }\n\t\n\tget disabled(){ return this.hasAttribute('disabled') }\n\tset disabled(val=true){val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled')}\n\t\n}\n\ncustomElements.define('check-box', CheckBoxElement)\n\nexport default customElements.get('check-box')\n","/*\n\tSVG and idea taken from https://ant.design/components/button/\n\t\n\tExamples: \n\t<circle-spinner/>\n\t<circle-spinner style=\"--size:.8em; color: white\"/>\n*/\n\nclass SpinnerElement extends HTMLElement {\n\t\n    constructor() {\n        super()\n\t\t\n        let shadow = this.attachShadow({mode: 'open'})\n        let temp = document.createElement('template')\n        \n        temp.innerHTML = `<style>\n\t\t\t:host {\n\t\t\t\t--size: .8em;\n\t\t\t\theight: var(--size);\n\t\t\t    width: var(--size);\n\t\t\t    display: inline-block;\n\t\t\t    vertical-align: middle;\n\t\t\t}\n\t\t\t\n\t\t\t:host(.overlay) {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tz-index: 10000;\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes spin {\n\t\t\t\t100% {\n\t\t\t\t    transform: rotate(360deg);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsvg {\n\t\t\t\tanimation: spin 1s infinite linear;\n\t\t\t\ttransform-origin: center center;\n\t\t\t}\n\t\t\t</style>\n\t\t\t<svg viewBox=\"0 0 1024 1024\" class=\"spin\" data-icon=\"loading\" width=\"100%\" height=\"100%\" fill=\"currentColor\" aria-hidden=\"true\">\n\t\t\t\t<path d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\"></path>\n\t\t\t</svg>`\n\t\t\t\n        this.shadowRoot.appendChild(temp.content.cloneNode(true));\n    }\n}\n\ncustomElements.define('b-spinner', SpinnerElement)\n","/*\n\thttps://icomoon.io/app\n*/\nimport { LitElement, html, css } from 'lit-element';\n\nconst SVG_ICONS = new Map()\n\nfunction registerIcon(name, icon, {prefix='icon-'}={}){\n\n\tlet d = document.createElement('div')\n\td.innerHTML = icon\n\ticon = d.firstElementChild\n\n\t// if no name, get it from the icon attribute\n\tif( !name ){\n\t\tname = icon.id || icon.name || ''\n\t\tname = name.replace(prefix, '')\n\t}\n\n\tif( !name )\n\t\treturn console.warn('Icons must have a name')\n\n\tif( SVG_ICONS.get(name) )\n\t\treturn console.warn('There is already an icon registered with that name' )\n\n\tSVG_ICONS.set(name, icon)\n}\n\nlet hasWarnedNoIcons = false\nfunction warnNoIcons(){\n\tif( hasWarnedNoIcons ) return\n\thasWarnedNoIcons = true\n\tconsole.warn('No icons have been registered. Do so with `IconElement.register()` – Or import `bui/elements/icons/_all`')\n}\n\nexport default class IconElement extends HTMLElement {\n\n\tstatic register(...icons){\n\t\ticons.forEach(icon=>{\n\t\t\tlet name = ''\n\n\t\t\tif( Array.isArray(icon) )\n\t\t\t\t[name, icon] = icon\n\t\t\t\t\n\t\t\tregisterIcon(name, icon)\n\t\t})\n\t}\n\n\t// not ideal...\n\tget styles(){return /*css*/`\n\t\t:host {\n\t\t\tdisplay: inline-flex;\n\t\t\tvertical-align: middle;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcolor: inherit;\n\t\t\t--size: 1em;\n\t\t\theight: var(--size);\n\t\t}\n\n\t\t:host([hidden]) {\n\t\t\tdisplay: none !important;\n\t\t}\n\n\t\t:host([link]) {\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t:host([muted]) {\n\t\t\topacity: .5;\n\t\t}\n\n\t\t:host([square]) {\n\t\t\twidth: var(--size);\n\t\t}\n\n\t\t:host([invalid]) {\n\t\t\tbackground: #f44336;\n\t\t}\n\n\t\tsvg {\n\t\t\theight: 100%;\n\t\t\t/* width: 100%; */\n\t\t\tdisplay: inline-block;\n\t\t\tfill: currentColor;\n\t\t\tcolor: currentColor;\n\t\t}\n\n\t\t@keyframes rotate360 {\n\t\t\tto { transform: rotate(360deg); }\n\t\t}\n\n\t\t@keyframes rotate360CCW {\n\t\t\tto { transform: rotate(-360deg); }\n\t\t}\n\n\t\t:host([spin]) svg {\n\t\t\tanimation: 1600ms rotate360 infinite linear;\n\t\t}\n\n\t\t:host([name=\"arrows-ccw\"][spin]) svg {\n\t\t\tanimation: 1600ms rotate360CCW infinite linear;\n\t\t}\n\t`}\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.attachShadow({mode: 'open'})\n        let temp = document.createElement('template')\n\t\ttemp.innerHTML = `<style>\n\t\t${this.styles}\n\t\t</style>\n\t\t<slot></slot>\n\t\t`\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t}\n\n\t_setSVG(){\n\n\t\tif( SVG_ICONS.size == 0 )\n\t\t\twarnNoIcons()\n\n\t\tif( this._svg )\n\t\t\tthis._svg.remove()\n\n\t\tlet svg = SVG_ICONS.get(this.name)\n\t\t\n\t\tif( svg ){\n\t\t\tthis._svg = svg.cloneNode(true)\n\t\t\tthis.removeAttribute('invalid')\n\t\t\tthis.shadowRoot.appendChild(this._svg)\n\t\t}else{\n\t\t\tthis.setAttribute('invalid', '')\n\t\t}\n\t}\n\n\tstatic get observedAttributes() { return ['name']; }\n\t\n\tattributeChangedCallback(name, oldValue, newValue){\n\t\t\n\t\tif( name === 'name' )\n\t\t\tthis._setSVG()\n\t}\n\t\n\tget name(){ return this.getAttribute('name')}\n\tset name(val){ return this.setAttribute('name', val)}\n\n\tset spin(val){\n\t\tthis.toggleAttribute('spin', Boolean(val))\n\t}\n\tget spin(){\n\t\treturn this.hasAttribute('spin')\n\t}\n\n}\n\t\ncustomElements.define('b-icon', IconElement)\n\nexport class IconList extends LitElement {\n\n\tstatic get properties(){return {\n\t\tcols: {type: Number, reflect: true}\n\t}}\n\n\tconstructor(){\n\t\tsuper()\n\t\tthis.cols = 6\n\t}\n\n\tstatic get styles(){return css`\n\t\t:host {\n\t\t\tdisplay: block;\n\t\t\tcolumn-count: 6;\n\t\t\tgap: 1em;\n\t\t\twidth: 100%;\n\t\t\tfont-size:1.2em;\n\t\t\tpadding: 1em;\n\t\t\toverflow: auto;\n\t\t}\n\n\t\t:host([cols=\"1\"]) { column-count: 1}\n\t\t:host([cols=\"2\"]) { column-count: 2}\n\t\t:host([cols=\"3\"]) { column-count: 3}\n\t\t:host([cols=\"4\"]) { column-count: 4}\n\t\t:host([cols=\"5\"]) { column-count: 5}\n\t\t:host([cols=\"6\"]) { column-count: 6}\n\n\t\t:host > div {\n\t\t\tmargin: .75em;\n\t\t}\n\n\t\t:host > div:first-child {\n\t\t\tmargin-top: 0;\n\t\t}\n\n\t\tb-icon {\n\t\t\twidth: 1.6em;\n\t\t}\n\n\t\tsmall {\n\t\t\tcolor: var(--theme-text-accent);\n\t\t}\n\n\t\t@media (max-width: 550px) {\n            :host {\n                column-count: 1 !important;\n            }\n        }\n\t`}\n\n\trender(){return html`\n\t\t${Array.from(SVG_ICONS.keys()).map(name=>html`\n\t\t\t<div>\n\t\t\t\t<b-icon name=${name}></b-icon> <small>${name}</small>\n\t\t\t</div>\n\t\t`)}\n\t`}\n}\ncustomElements.define('b-icon-list', IconList)","import { LitElement, html, css } from 'lit-element';\nimport './spinner'\nimport './icon'\n\nexport default class BtnElement extends LitElement {\n\n    static get properties() { return {\n        href: {type: String, reflect: true},\n        value: {type: String, reflect: true},\n        icon: { type: String },\n        spin: {type: Boolean, reflect: true, attribute: 'spin'}\n    }}\n\n    static get styles(){ return css`\n    \n        :host{\n            --red: var(--red-700);\n            /* --black: #333;\n            --orange: #F57C00;\n            --blue: #2196F3;\n            --red: #d32f2f;\n            --gray: #444444;\n            --green: #27ae60;\n            --yellow: #f2d57e;\n            --teal: #009688;\n            --purple: #7E57C2;\n            --brown: #795548;\n            --pink: #E91E63; */\n\n            --radius: 3px;\n            --color: var(--b-btn-bgd, var(--black)) ;\n            --bgdColor: var(--color);\n            --hoverBgdColor: rgba(255,255,255,.1);\n            --textColor: var(--b-btn-color, #fff);\n            --borderColor: var(--color);\n            --borderStyle: solid;\n            --borderWidth: 1px;\n            --padding: .4em .6em;\n\n            display: inline-grid;\n            position: relative;\n            box-sizing: border-box;\n            background: var(--bgdColor);\n            color: var(--textColor);\n            border-radius: var(--radius);\n            cursor: pointer;\n            transition: \n                color 160ms,\n                background-color 160ms,\n                border 160ms;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            text-rendering: optimizeLegibility;\n            font-size: .9rem;\n            line-height: 1rem;\n            font-weight: bold;\n            font-family: var(--b-btn-font);\n\n            -webkit-touch-callout: none; /* iOS Safari */\n            -webkit-user-select: none; /* Safari */\n            -khtml-user-select: none; /* Konqueror HTML */\n            -moz-user-select: none; /* Firefox */\n            -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; \n        }\n\n        /* hide by default */\n        @media print {\n            :host {\n                display: none;\n            }\n        }\n\n        :host([hidden]) {\n            display: none !important;\n        }\n\n        main {\n            border-radius: var(--radius);\n            position: relative;\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            padding: var(--padding);\n            box-sizing: border-box;\n            /*padding-bottom: .3em;*/ /* remove descender line to make it look more centered*/\n            text-overflow: ellipsis;\n            border: var(--borderStyle) var(--borderWidth) var(--borderColor);\n            min-width: 0;\n            /* word-break: break-all; */\n            /* transition: 120ms; */\n        }\n\n        main > span {\n            display: inline-flex;\n            justify-content: center;\n        }\n\n        slot {\n            display: block;\n            margin-bottom: -.1em; /* remove descender line to make it look more centered*/\n        }\n\n        slot::slotted(*) {\n            display: inline-block;\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n\n        .hover {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n            left: 0;\n            top: 0;\n            background: var(--hoverBgdColor);\n            visibility: hidden;\n            opacity: 0;\n            /* mix-blend-mode: saturation; */\n            border-radius: var(--radius);\n            /* transition: 120ms; */\n        }\n\n        @media (hover) {\n            :host(:hover) .hover {\n                opacity: 1;\n                visibility: visible;\n            }\n        }\n\n        /* b-icon,\n        ::slotted(b-icon) {\n            vertical-align: bottom;\n        } */\n\n        b-spinner {\n            opacity: 0;\n            visibility: hidden;\n            --size: 1em;\n            margin-left: -1.35em;\n            margin-right: .35em;\n            transition: 120ms;\n        }\n\n        :host([spin]) b-spinner {\n            opacity: 1;\n            visibility: visible;\n            margin-left: 0;\n        }\n\n        :host([spin]) b-icon {\n            display: none;\n        }\n\n        main b-icon {\n            margin-right: .35em;\n            margin-left: -.15em;\n        }\n\n        :host([stacked]) {\n            --padding: .3em .5em .1em .5em;\n        }\n\n        :host([stacked]) main {\n            display: inline-grid;\n            align-content: center;\n        }\n\n        :host([stacked]) b-icon {\n            font-size: 1.2em;\n            margin: 0;\n        }\n\n        :host([stacked]) slot {\n            font-size: .6em;\n            line-height: 1em;\n        }\n\n        :host([stacked]) slot::slotted(*) {\n            opacity: var(--b-btn-stacked-label-opacity, .5);\n        }\n\n        :host([stacked]) slot[name=\"icon\"] {\n            font-size: 1em;\n            display: contents;\n        }\n\n        :host([stacked]) slot[name=\"icon\"]::slotted(*),\n        :host([stacked]) slot[name=\"icon\"] b-icon{\n            opacity: var(--b-btn-stacked-icon-opacity, 1);\n        }\n\n        :host([stacked]) b-spinner {\n            font-size: 1.2em;\n            margin-right: 0;\n            margin-left: -1em;\n        }\n        :host([stacked][spin]) b-spinner {\n            margin-left: 0;\n        }\n\n        :host([block]) {\n            display: block;\n            text-align: center\n        }\n\n        :host([block]) main {\n            display: flex;\n            justify-content: center\n        }\n\n        :host(:empty) {\n            --padding: .4em .5em;\n        }\n\n        :host(:empty) main b-icon {\n            margin-left: 0;\n            margin-right: 0;\n        }\n\n        /* offset play icon to make it appear more centered */\n        :host(:empty) main b-icon[name=\"play\"] {\n\t\t\tmargin: 0 -.1em 0 .1em;\n        }\n\n        :host([color^=\"primary\"])  { --color: var(--color-primary); }\n        :host([color^=\"theme\"])  { --color: var(--theme); }\n        :host([color^=\"black\"])  { --color: var(--black); }\n        :host([color^=\"white\"])  { --color: var(--white); --textColor: var(--black); }\n        :host([color^=\"orange\"]) { --color: var(--orange); }\n        :host([color^=\"blue\"])   { --color: var(--blue); }\n        :host([color^=\"red\"])    { --color: var(--red); }\n        :host([color^=\"gray\"])   { --color: var(--gray); }\n        :host([color^=\"green\"])  { --color: var(--green); }\n        :host([color^=\"yellow\"]) { --color: var(--yellow); }\n        :host([color^=\"teal\"])   { --color: var(--teal); }\n        :host([color^=\"purple\"]) { --color: var(--purple); }\n        :host([color^=\"brown\"])  { --color: var(--brown); }\n        :host([color^=\"pink\"])   { --color: var(--pink); }\n\n        @media (hover){\n        :host([color*=\"hover-black\"]:hover)  { --color: var(--black); }\n        :host([color*=\"hover-orange\"]:hover) { --color: var(--orange); }\n        :host([color*=\"hover-blue\"]:hover)   { --color: var(--blue); }\n        :host([color*=\"hover-red\"]:hover)    { --color: var(--red); }\n        :host([color*=\"hover-gray\"]:hover)   { --color: var(--gray); }\n        :host([color*=\"hover-green\"]:hover)  { --color: var(--green); }\n        :host([color*=\"hover-yellow\"]:hover) { --color: var(--yellow); }\n        :host([color*=\"hover-teal\"]:hover)   { --color: var(--teal); }\n        :host([color*=\"hover-purple\"]:hover) { --color: var(--purple); }\n        :host([color*=\"hover-brown\"]:hover)  { --color: var(--brown); }\n        :host([color*=\"hover-pink\"]:hover)   { --color: var(--pink); }\n        }\n\n        :host([pill]) {\n            --radius: 1em;\n        }\n\n        /* @media (hover) { */\n        :host([outline]:not(:hover)) {\n            --bgdColor: transparent;\n            --textColor: var(--color);\n        }\n        /* } */\n\n        /* :host([outline]:hover){\n            --bgdColor: var(--color);\n            --textColor: inherit;\n        } */\n\n        :host([text]),\n        :host([clear]) {\n            --bgdColor: transparent;\n            --textColor: var(--color);\n            --borderColor: transparent;\n        }\n\n        /* :host([text]) .hover,\n        :host([clear]) .hover {\n            display: none;\n        } */\n\n        :host([text]) {\n            font-size: 1em;\n            font-weight: normal;\n        }\n\n        @media (hover){\n        :host([text]:hover),\n        :host([clear]:hover) {\n            --bgdColor: rgba(0,0,0,.05);\n        }}\n\n        :host([text].popover-open),\n        :host([clear].popover-open) {\n            --bgdColor: rgba(0,0,0,.05);\n        }\n\n        :host([xs]) { font-size: .6rem; }\n        :host([sm]) { font-size: .8rem; }\n        :host([lg]) { font-size: 1.2rem; }\n        :host([xl]) { font-size: 1.4rem; }\n\n        /* floating action btn */\n        :host([fab]) {\n            position: absolute;\n            z-index: 100;\n            box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2),\n                        0px 6px 10px 0px rgba(0,0,0,0.14),\n                        0px 1px 18px 0px rgba(0,0,0,0.12);\n            bottom: 1rem;\n            right: 1rem;\n            font-size: 1.4em;\n            width: 2em;\n            height: 2em;\n            --radius: 2em;\n            overflow: hidden;\n        }\n\n        :host([fab]) b-spinner {\n            margin-right: 0;\n            margin-left: -1em;\n        }\n\n        :host([fab][spin]) b-spinner {\n            margin-left: 0;\n        }\n\n        @keyframes shake {\n            from,\n            to {\n                transform: translate3d(0, 0, 0);\n            }\n\n            15%,\n            45%,\n            75% {\n                transform: translate3d(-.25em, 0, 0);\n            }\n\n            30%,\n            60%,\n            90% {\n                transform: translate3d(.25em, 0, 0);\n            }\n        }\n\n        :host(.shake) {\n            animation-name: shake;\n            animation-duration: 700ms;\n            animation-fill-mode: both;\n        }\n    `}\n\n    render(){ return html`\n        <div class=\"hover\" part=\"hover\"></div>\n        <main part=\"main\">\n            <span>\n                <b-spinner></b-spinner>\n                <slot name=\"icon\">\n                    ${this.icon?html`<b-icon part=\"icon\" name=\"${this.icon}\"></b-icon>`:''}\n                </slot>\n            </span>\n            <slot></slot>\n        </main>\n    `}\n\n\tconstructor(){\n\t\tsuper()\n        this.icon = ''\n        this.spin = false\n\t}\n\n    firstUpdated(){\n        this.addEventListener('click', ()=>{\n            if( this.href )\n                if( this.getAttribute('target') == '_blank' )\n                    window.open(this.href)\n                else\n                    window.location = this.href\n        }, true)\n    }\n\n    shake(){\n        this.classList.add('shake')\n        setTimeout(()=>{\n            this.classList.remove('shake')\n        },1000)\n    }\n\n}\n\ncustomElements.define('b-btn', BtnElement)\n","import { LitElement, html, css } from 'lit-element'\n\ncustomElements.define('b-btn-group', class extends LitElement{\n\n    static get styles(){return css`\n        :host {\n            display: inline-flex;\n        }\n\n        :host([hidden]) {\n            display: none;\n        }\n\n        ::slotted(b-btn:first-of-type:not(:last-of-type)){\n            border-radius: var(--radius) 0 0 var(--radius);\n        }\n\n        ::slotted(b-btn:not(:first-of-type):not(:last-of-type)){\n            border-radius: 0;\n            border-left: solid 1px rgba(0,0,0,.2);\n        }\n\n        ::slotted(b-btn:last-of-type:not(:first-of-type)){\n            border-radius: 0 var(--radius) var(--radius) 0;\n            border-left: solid 1px rgba(0,0,0,.2);\n        }\n\n        ::slotted(b-btn:not(:first-of-type)[clear]) {\n            border-left: solid 1px rgba(0,0,0,.1);\n        }\n\n\n        :host([vert]) {\n            flex-direction: column;\n        }\n\n        :host([vert]) ::slotted(b-btn:first-of-type:not(:last-of-type)){\n            border-radius: var(--radius) var(--radius) 0 0;\n        }\n\n        :host([vert]) ::slotted(b-btn:not(:first-of-type):not(:last-of-type)){\n            border-radius: 0;\n            border-top: solid 1px rgba(0,0,0,.2);\n            border-left: none;\n        }\n\n        :host([vert]) ::slotted(b-btn:last-of-type:not(:first-of-type)){\n            border-radius: 0 0 var(--radius) var(--radius);\n            border-top: solid 1px rgba(0,0,0,.2);\n            border-left: none;\n        }\n    `}\n\n    render(){return html`\n        <slot></slot>\n    `}\n\n})\n\nexport default customElements.get('b-btn-group')","import { BaseElement } from \"./components/BaseElement.js\"\nimport { ShopSubcategoryList } from \"./components/ShopSubcategoryList.js\"\nimport { ShopSubcategoryTile } from \"./components/ShopSubcategoryTile.js\"\nimport { ShopCategoryView } from \"./components/ShopCategoryView.js\"\nimport { ShopCategoryProduct } from \"./components/ShopCategoryProduct.js\"\nimport { ShopCategoryFilter } from \"./components/ShopCategoryFilter.js\"\nimport { ShopCategoryPagination } from \"./components/ShopCategoryPagination.js\"\nimport { ShopWishlist } from \"./components/ShopWishlist.js\"\nimport { didNavigate } from \"./components/utils.js\"\nimport \"blackstone-ui/presenters/form/controls/range-slider.js\"\nimport \"blackstone-ui/presenters/form/controls/check-box.js\"\nimport \"blackstone-ui/elements/btn.js\"\nimport \"blackstone-ui/elements/btn-group.js\"\n\nwindow.addEventListener(\"popstate\", () => didNavigate())\n\ncustomElements.define(\"base-element\", BaseElement)\ncustomElements.define(\"shop-subcategory-list\", ShopSubcategoryList)\ncustomElements.define(\"shop-subcategory-tile\", ShopSubcategoryTile)\ncustomElements.define(\"shop-category-view\", ShopCategoryView)\ncustomElements.define(\"shop-category-product\", ShopCategoryProduct)\ncustomElements.define(\"shop-category-filter\", ShopCategoryFilter)\ncustomElements.define(\"shop-category-pagination\", ShopCategoryPagination)\ncustomElements.define(\"shop-wishlist\", ShopWishlist)\n"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","length","values","node","nextNode","nodeType","hasAttributes","attributes","_length","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","_strings","lastIndex","_i","insert","s","createMarker","match","createTextNode","insertBefore","_parent","previousSibling","_i2","pop","str","suffix","isTemplatePartActive","part","createComment","walkerNodeFilter","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","this","setValue","_part","commit","fragment","cloneNode","importNode","nodeName","_part2","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","value","getHTML","innerHTML","isPrimitive","_typeof","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","v","text","_v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemPart","itemParts","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","_this2","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","_style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","style","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","Boolean","Object","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","initialize","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","requestUpdateInternal","constructor","_classProperties","p","_this3","hasOwnProperty","_instanceProperties","_this4","enableUpdating","_attributeToProperty","ctor","attr","_attributeNameForProperty","attrValue","_propertyValueToAttribute","propName","_attributeToPropertyMap","getPropertyOptions","_propertyValueFromAttribute","oldValue","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","k","_this5","_propertyToAttribute","finalize","_this6","superProperties","getPrototypeOf","_this7","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","configurable","enumerable","superCtor","props","properties","getOwnPropertyNames","getOwnPropertySymbols","createProperty","HTMLElement","supportsAdoptingStyleSheets","ShadowRoot","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","textFromCSSResult","css","reduce","acc","idx","renderNotImplemented","LitElement","_getUniqueStyles","renderRoot","createRenderRoot","adoptStyles","attachShadow","mode","_styles","adoptedStyleSheets","map","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","hasUpdated","styleElement","templateResult","render","_this","userStyles","getStyles","addStyles","reduceRight","unshift","cssRules","rule","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","delete","BaseElement","shadowRoot","detail","bubbles","composed","ev","CustomEvent","dispatchEvent","callback","val","localStorage","getItem","setItem","url","URL","location","tid","searchParams","event_category","event_label","gtag","ga","eventLabel","eventCategory","eventAction","history","pushState","title","didNavigate","page_title","page_location","href","page_path","pathname","categories","_asyncToGenerator","fetch","siteConfig","categoryEndpoint","json","aFetch","request","opts","controller","AbortController","signal","abort","ready","sizeImage","u","components","filename","sz","toString","error","log","ShopSubcategoryList","current","path","reverse","id","find","c","stub","replace","subs","filter","shift","sort","a","b","asort","parseInt","sortOrder","bsort","navigate","tiles","root","headerHeight","tops","pos","headerPosition","top","height","max","search","setTimeout","fixHeaderHeights","breadcrumbs","page","preventDefault","nav","sub","description","image_url","ShopSubcategoryTile","h","offsetTop","offsetHeight","px","b64","btoa","defaultImage","image","defaultImageBase64","ShopCategoryView","resultId","products","filters","showfilter","innerWidth","currentFetch","on","selection","entries","collectionEndpoint","slug","category","limit","endpoint","origin","currentUrl","f","_id","unit","param","_context","searchString","scroll","scrollOptions","behavior","block","inline","rect","getBoundingClientRect","shouldScroll","scrollIntoView","y","fetchSearch","h1","innerText","display_name","presets","priceExcl","fulltitle","product_set","variants","ShopCategoryProduct","parseFloat","prices","minPrice","prev","maxPrice","img","singular","price","toImp","round","toMM","ShopCategoryFilter","open","filterid","settingid","displayDefault","getOption","mainClass","toggleClass","selectionClass","imperialPresets","metricPresets","showUnitPresets","presetDisplayUnit","setUnit","setOption","requestUpdate","target","trigger","popular","price_1","ShopControl","ShopCategoryToggles","wrapperClass","concat","includes","define","ShopCategoryMinmax","label","vals","min","curr","Infinity","updateSelection","inputChange","impInputChange","autoconvert","displayUnit","ShopCategoryPresets","isActive","preset","mcat","ShopCategoryPagination","ceil","output","pages","_toConsumableArray","pageCount","_","number","next","showInPagination","limitStart","limitEnd","limitPages","ShopWishlist","accountid","wishlist","updateEvent","err","UA","navigator","userAgent","HandheldScanners","device","isiOS","isAndroid","isMobile","test","outerWidth","outerHeight","minScreenSize","isMac","standalone","patt","matches","isInstalled","matchMedia","applyClasses","documentElement","classList","toggle","isElectron","isWindows","mouseUp","bind","mouseMove","range","step","valMin","valMax","toFixed","oldVal","oldMin","oldMax","_polishVal","dmin","abs","dmax","_active","_mouseDown","_didChange","setPropOn","parentElement","setProperty","mouseDown","_len","_maxLeft","_minLeft","_trackLength","which","pageX","_lastMousePos","atMin","atMax","offset","x","touches","screenX","clientWidth","TouchRippleElement","temp","animate","remove","hide","CheckBoxElement","ripple","_onClick","code","relatedTarget","enter","hasAttribute","disabled","checked","SpinnerElement","SVG_ICONS","registerIcon","icon","d","firstElementChild","hasWarnedNoIcons","IconElement","_svg","svg","newValue","_setSVG","toggleAttribute","icons","IconList","cols","keys","BtnElement","spin"],"mappings":"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"}