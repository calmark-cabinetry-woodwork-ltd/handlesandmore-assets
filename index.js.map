{"version":3,"file":"index.js","sources":["../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../src/components/BaseElement.js","../src/components/utils.js","../src/components/ShopCategoryFilter.js","../node_modules/blackstone-ui/util/device.js","../node_modules/blackstone-ui/presenters/form/controls/range-slider.js","../node_modules/blackstone-ui/presenters/form/controls/touch-ripple.js","../node_modules/blackstone-ui/presenters/form/controls/check-box.js","../node_modules/blackstone-ui/elements/spinner.js","../node_modules/blackstone-ui/elements/icon.js","../node_modules/blackstone-ui/elements/btn.js","../node_modules/blackstone-ui/elements/btn-group.js","../src/index.js","../src/components/ShopSubcategoryList.js","../src/components/ShopSubcategoryTile.js","../src/components/ShopCategoryView.js","../src/components/ShopCategoryProduct.js","../src/components/ShopCategoryPagination.js","../src/components/ShopWishlist.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import { LitElement, html, css } from \"lit-element\"\n\nclass BaseElement extends LitElement {\n    get root() {\n        return this.shadowRoot\n    }\n\n    static getOption(key) {\n        const val = window.localStorage.getItem(key) || null\n        return val ? JSON.parse(val) : null\n    }\n\n    static setOption(key, value) {\n        const val = value ? JSON.stringify(value) : null\n        window.localStorage.setItem(key, val)\n    }\n\n    render() {\n        return html`<p>Element</p>`\n    }\n\n    trigger(type, detail = {}, bubbles = true, composed = true) {\n        const ev = new CustomEvent(type, { detail, bubbles, composed })\n        this.dispatchEvent(ev)\n    }\n\n    on(type, callback) {\n        this.addEventListener(type, callback)\n    }\n\n    off(type, callback) {\n        this.removeEventListener(type, callback)\n    }\n}\n\nexport { BaseElement, html, css }\n",";(() => {\n    const url = new URL(window.location)\n    const tid = url.searchParams.get(\"tid\")\n    if (tid) {\n        const event_category = \"tagview\"\n        const event_label = tid\n        if (window && window.gtag) {\n            window.gtag(\"event\", \"tagview\", { event_category, event_label })\n        }\n        if (window && window.ga) {\n            const eventAction = \"tagview\"\n            const [eventCategory, eventLabel] = [event_category, eventLabel]\n            window.ga(\"send\", \"event\", {\n                eventAction,\n                eventCategory,\n                eventLabel\n            })\n        }\n        url.searchParams.delete(\"tid\")\n        history.pushState({}, document.title, `${url}`)\n    }\n})()\n\nexport const didNavigate = () => {\n    const e = new CustomEvent(\"didNavigate\", { bubbles: true, composed: true })\n    document.dispatchEvent(e)\n    if (window && window.gtag) {\n        window.gtag(\"event\", \"page_view\", {\n            page_title: document.title,\n            page_location: window.location.href,\n            page_path: window.location.pathname\n        })\n    }\n    if (window && window.ga) {\n        const eventAction = \"page_view\"\n        window.ga(\"send\", \"event\", {\n            eventAction,\n            page_title: document.title,\n            page_location: window.location.href,\n            page_path: window.location.pathname\n        })\n    }\n}\n\nexport const clickTrack = (eventCategory, eventLabel) => {\n    if (window && window.ga) {\n        const eventAction = \"click\"\n        window.ga(\"send\", \"event\", { eventAction, eventCategory, eventLabel })\n    }\n}\n\nexport const categories = (async () => {\n    return (await (await fetch(window.siteConfig.categoryEndpoint)).json())\n        .categories\n})()\n\nexport const aFetch = (request, opts = {}) => {\n    const controller = new AbortController()\n    const { signal } = controller\n\n    return {\n        abort: () => controller.abort(),\n        ready: fetch(request, { ...opts, signal })\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { clickTrack } from \"./utils.js\"\n\nconst toImp = val => {\n    if (Array.isArray(val)) {\n        return val.map(v => toImp(v))\n    }\n    return Math.round((parseFloat(val) / 25.4) * 16) / 16\n}\n\nconst toMM = val => {\n    if (Array.isArray(val)) {\n        return val.map(v => toMM(v))\n    }\n    return Math.round(parseFloat(val) * 25.5 * 10) / 10\n}\n\nexport class ShopCategoryFilter extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                margin: 0 0 2rem;\n            }\n            header {\n                position: relative;\n                font-family: \"Nunito Sans\", Helvetica, sans-serif;\n                color: #313333;\n                font-size: 0.9rem;\n                line-height: 1.5rem;\n                font-weight: 700;\n                letter-spacing: 0.05em;\n                text-transform: none;\n                cursor: pointer;\n                padding: 1rem 0;\n            }\n            header.selected {\n                color: #ff4438;\n            }\n            main {\n                display: none;\n            }\n            main.open {\n                display: block;\n                margin: 0;\n                padding: 0 0 2rem;\n            }\n            .toggle {\n                position: absolute;\n                top: 1rem;\n                right: 0;\n                line-height: 1.5rem;\n            }\n            .toggle:before {\n                font-family: hfont;\n                content: var(--icon-content-caret-right);\n                font-size: 10px;\n            }\n            .toggle.open:before {\n                content: var(--icon-content-caret-down);\n            }\n            .preset-display-unit {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                line-height: 1.65em;\n                gap: 4px;\n            }\n            .preset-display-unit > div {\n                display: block;\n                text-align: center;\n                padding: 0.35em 0em;\n                border-style: solid;\n                border-color: #bbb;\n                font-size: 0.8rem;\n                cursor: pointer;\n                border-width: 0px 0px 2px;\n            }\n            .preset-display-unit.unit-mm .mm,\n            .preset-display-unit.unit-in .in {\n                border-bottom-color: var(--fc-theme);\n                font-weight: bold;\n            }\n            @media (min-width: 767px) {\n                header {\n                    padding: 0;\n                }\n                main.open,\n                main {\n                    margin: 0;\n                    padding: 0;\n                }\n                .toggle {\n                    top: 0;\n                }\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            open: { type: Boolean },\n            key: { type: String },\n            display_name: { type: String },\n            type: { type: String },\n            values: { type: Array },\n            selection: { type: Array },\n            unit: { type: String },\n            presets: { type: Array }\n        }\n    }\n\n    get filterid() {\n        return this.key.replace(/.*\\[(.*)\\].*/, \"$1\")\n    }\n\n    constructor() {\n        super()\n        this.open = window.innerWidth > 767\n    }\n\n    render() {\n        const { filterid } = this\n        const settingid = `${filterid}-unit`\n        const displayUnit = BaseElement.getOption(settingid) || this.unit\n        const displayDefault = displayUnit == this.unit\n\n        const mainClass = this.open ? \"open\" : \"\"\n        const toggleClass = this.open ? \"toggle open\" : \"toggle\"\n\n        const toggleOpen = () => (this.open = !this.open)\n        const selectionClass = this.selection.length ? \"selected\" : \"\"\n\n        const imperialPresets = (this.presets || []).filter(p =>\n            /\\d+\\s*in$/i.exec(p.name)\n        )\n        const metricPresets = (this.presets || []).filter(p =>\n            /\\d+\\s*mm$/i.exec(p.name)\n        )\n        const showUnitPresets =\n            imperialPresets.length + metricPresets.length > 0\n\n        const presetDisplayUnit = displayDefault ? \"unit-mm\" : \"unit-in\"\n\n        const setUnit = unit => ev => {\n            BaseElement.setOption(settingid, unit)\n            this.unit = unit == \"alt\" ? \"in\" : \"mm\"\n            this.requestUpdate()\n        }\n\n        return html`\n            <header class=${selectionClass} @click=${toggleOpen}>\n                ${this.display_name}\n                <span class=${toggleClass}></span>\n            </header>\n            <main class=${mainClass}>\n                ${this.type == \"Text\"\n                    ? html`\n                          <shop-category-toggles\n                              .key=${this.key}\n                              .values=${this.values}\n                              .selection=${this.selection}\n                          ></shop-category-toggles>\n                      `\n                    : html``}\n                ${this.type == \"MinMax\"\n                    ? html`\n                          ${showUnitPresets\n                              ? html`\n                                    <div\n                                        class=\"preset-display-unit ${presetDisplayUnit}\"\n                                    >\n                                        <div @click=${setUnit(\"\")} class=\"mm\">\n                                            Metric\n                                        </div>\n                                        <div\n                                            @click=${setUnit(\"alt\")}\n                                            class=\"in\"\n                                        >\n                                            Imperial\n                                        </div>\n                                    </div>\n                                    <shop-category-presets\n                                        .key=${this.key}\n                                        .selection=${this.selection}\n                                        .mcat=${displayDefault\n                                            ? \"metric\"\n                                            : \"imperial\"}\n                                        .presets=${displayDefault\n                                            ? metricPresets\n                                            : imperialPresets}\n                                    ></shop-category-presets>\n                                `\n                              : html`\n                                    <shop-category-minmax\n                                        .key=${this.key}\n                                        .values=${this.values}\n                                        .selection=${this.selection}\n                                        .label=${this.unit}\n                                        .unit=${this.unit}\n                                    ></shop-category-minmax>\n                                    <shop-category-presets\n                                        .key=${this.key}\n                                        .selection=${this.selection}\n                                        .presets=${this.presets}\n                                    ></shop-category-presets>\n                                `}\n                      `\n                    : html``}\n            </main>\n        `\n    }\n}\n\nclass ShopControl extends BaseElement {\n    static get properties() {\n        return {\n            key: { type: String },\n            values: { type: Array },\n            selection: { type: Array }\n        }\n    }\n    get filterid() {\n        return this.key.replace(/.*\\[(.*)\\].*/, \"$1\")\n    }\n}\n\nclass ShopCategoryToggles extends ShopControl {\n    static get styles() {\n        return css`\n            .label span {\n                font-size: 0.75rem;\n                color: #313333;\n                line-height: 1.8;\n            }\n            check-box {\n                position: relative;\n                left: -8px;\n                width: 100%;\n            }\n            .wrapper.tall {\n                max-height: 300px;\n                overflow-y: scroll;\n            }\n        `\n    }\n    constructor() {\n        super()\n        this.values = []\n        this.selection = []\n    }\n\n    get $wrapper() {\n        return this.root.querySelector(\".wrapper\")\n    }\n\n    render() {\n        const update = v => ev => {\n            const value = ev.detail.value\n            const selection = value\n                ? this.selection.concat(v)\n                : this.selection.filter(s => s !== v)\n            this.trigger(\"selection\", { key: this.key, selection })\n            this.selection = selection // cannot wait for async fetch to update this.selection\n        }\n\n        const wrapperClass =\n            this.values.length > 20 ? \"wrapper tall\" : \"wrapper\"\n\n        return html`\n            <div class=${wrapperClass}>\n                ${this.values.map(\n                    v => html`\n                        <check-box\n                            @change=${update(v)}\n                            type=\"switch\"\n                            label=${v}\n                            .value=${this.selection.includes(v)}\n                        >\n                            <span class=\"label\" slot=\"label\">\n                                <span>${v}</span>\n                            </span>\n                        </check-box>\n                    `\n                )}\n            </div>\n        `\n    }\n}\ncustomElements.define(\"shop-category-toggles\", ShopCategoryToggles)\n\nclass ShopCategoryMinmax extends ShopControl {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                padding: 0;\n            }\n            .range-slider-wrapper {\n                padding: 0 8px 3px;\n            }\n            .input-min-max {\n                display: grid;\n                grid-template-columns: 1fr 10px 1fr;\n                gap: 0;\n            }\n            .input-min-max div {\n                position: relative;\n                display: grid;\n                grid-template-columns: 1fr auto;\n                font-size: 0.85rem;\n                align-items: baseline;\n                opacity: 0.8;\n                color: rgb(49, 51, 51);\n                background-color: rgb(220, 218, 214);\n                padding: 3px;\n                border-bottom: 1px solid rgb(49, 51, 51);\n            }\n            .input-min-max div:after {\n                content: \" \";\n                display: block;\n                position: absolute;\n                background-color: rgb(255, 68, 56);\n                width: 100%;\n                height: 1px;\n                bottom: -1px;\n                left: 0px;\n                right: 0px;\n                opacity: 0;\n                transition: 0.1s opacity ease 0.1s;\n            }\n            .input-min-max div:focus-within:after {\n                bottom: -1px;\n                opacity: 1;\n                height: 2px;\n            }\n            input {\n                width: 100%;\n                box-sizing: border-box;\n                background-color: transparent;\n                border: none;\n                outline: none;\n                font-size: 0.8rem;\n            }\n            .display-unit {\n                display: none;\n            }\n            .display-unit.active {\n                display: block;\n            }\n            check-box {\n                position: relative;\n                left: -8px;\n                width: 100%;\n            }\n            .label span {\n                font-size: 0.75rem;\n                color: #313333;\n                line-height: 1.8;\n            }\n        `\n    }\n\n    get autoconvert() {\n        return `${this.label}`.toLowerCase() == \"mm\"\n    }\n\n    static get properties() {\n        return Object.assign(\n            {\n                min: { type: Number },\n                max: { type: Number },\n                label: { type: String },\n                unit: { type: String },\n                displayUnit: { type: String }\n            },\n            ShopControl.properties\n        )\n    }\n\n    render() {\n        const vals = this.values.map(v => parseFloat(v))\n        const min = vals.reduce(\n            (curr, acc) => (curr < acc ? curr : acc),\n            Infinity\n        )\n        const max = vals.reduce((curr, acc) => (curr > acc ? curr : acc), 0)\n        if (this.min != min) this.min = min\n        if (this.max != max) this.max = max\n\n        const selection = (\n            (this.selection.length && this.selection) || [this.min, this.max]\n        ).map(s => parseFloat(s))\n\n        const updateSelection = selection => {\n            const full = selection[0] == this.min && selection[1] == this.max\n            const s = full ? [] : selection\n            this.trigger(\"selection\", { key: this.key, selection: s })\n        }\n\n        const sliderChange = ev => {\n            const selection = ev.detail.value\n            updateSelection(selection)\n        }\n        const impSliderChange = ev => {\n            const selection = ev.detail.value\n            updateSelection(toMM(selection))\n        }\n\n        const inputChange = i => ev => {\n            let val = parseFloat(ev.target.value)\n            val = val > this.max ? this.max : val < this.min ? this.min : val\n            selection[i] = val\n            updateSelection(selection)\n        }\n\n        const impInputChange = i => ev => {\n            let val = toMM(ev.target.value)\n            val = val > this.max ? this.max : val < this.min ? this.min : val\n            selection[i] = val\n            updateSelection(selection)\n        }\n\n        const { key, autoconvert, filterid } = this\n\n        const settingid = `${filterid}-unit`\n        const displayUnit = BaseElement.getOption(settingid) || this.unit\n        const displayDefault = displayUnit == this.unit\n\n        const setUnit = ev => {\n            const { value } = ev.detail\n            const unit = value ? this.unit : \"alt\"\n            BaseElement.setOption(settingid, unit)\n            this.displayUnit = unit\n        }\n\n        return html`\n            <div class=\"display-unit ${displayDefault ? \"active\" : \"\"}\">\n                <div class=\"range-slider-wrapper\">\n                    <range-slider\n                        range\n                        step=\"1\"\n                        min=${this.min}\n                        max=${this.max}\n                        .value=${selection}\n                        style=\"width: 100%\"\n                        @change=${sliderChange}\n                    ></range-slider>\n                </div>\n                <div class=\"input-min-max\">\n                    <div>\n                        <input\n                            @change=${inputChange(0)}\n                            type=\"number\"\n                            min=${this.min}\n                            max=${selection[1]}\n                            .value=${selection[0]}\n                        />\n                        <span> ${this.label} </span>\n                    </div>\n                    <span></span>\n                    <div>\n                        <input\n                            @change=${inputChange(1)}\n                            type=\"number\"\n                            min=${selection[0]}\n                            max=${this.max}\n                            .value=${selection[1]}\n                        />\n                        <span> ${this.label} </span>\n                    </div>\n                </div>\n            </div>\n\n            ${autoconvert\n                ? html`\n                      <div\n                          class=\"display-unit ${displayDefault ? \"\" : \"active\"}\"\n                      >\n                          <div class=\"range-slider-wrapper\">\n                              <range-slider\n                                  range\n                                  step=\"0.0625\"\n                                  min=${toImp(this.min)}\n                                  max=${toImp(this.max)}\n                                  .value=${toImp(selection)}\n                                  style=\"width: 100%\"\n                                  @change=${impSliderChange}\n                              ></range-slider>\n                          </div>\n                          <div class=\"input-min-max\">\n                              <div>\n                                  <input\n                                      @change=${impInputChange(0)}\n                                      type=\"number\"\n                                      min=${toImp(this.min)}\n                                      max=${toImp(selection[1])}\n                                      step=\"0.0625\"\n                                      .value=${toImp(selection[0])}\n                                  />\n                                  <span>in</span>\n                              </div>\n                              <span></span>\n                              <div>\n                                  <input\n                                      @change=${impInputChange(1)}\n                                      type=\"number\"\n                                      min=${toImp(selection[0])}\n                                      max=${toImp(this.max)}\n                                      step=\"0.0625\"\n                                      .value=${toImp(selection[1])}\n                                  />\n                                  <span>in</span>\n                              </div>\n                          </div>\n                      </div>\n                      <check-box\n                          @change=${setUnit}\n                          type=\"switch\"\n                          .value=${displayDefault}\n                      >\n                          <span class=\"label\" slot=\"label\">\n                              <span>Metric</span>\n                          </span>\n                      </check-box>\n                  `\n                : html``}\n        `\n    }\n}\ncustomElements.define(\"shop-category-minmax\", ShopCategoryMinmax)\n\nclass ShopCategoryPresets extends BaseElement {\n    static get properties() {\n        return {\n            key: { type: String },\n            selection: { type: Array },\n            presets: { type: Array },\n            mcat: { type: String }\n        }\n    }\n    static get styles() {\n        return css`\n            :host {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 0.5rem;\n                margin: 1rem 0 1rem;\n            }\n            button {\n                background-color: #dcdad6;\n                color: #555;\n                box-shadow: none;\n                outline: none;\n                border: 1px solid #b7b6b5;\n                font-size: 0.8rem;\n                padding: 0.35em 0em;\n                box-shadow: 0 3px 5px rgba(0, 0, 0, 0.05);\n                transition: filter 200ms ease;\n                transition-timing-function: ease-in-out;\n                font-family: \"Nunito Sans\", sans-serif;\n                border-radius: 50px;\n                letter-spacing: 0.0625em;\n                text-transform: none;\n                text-decoration: none;\n                line-height: 2em;\n                font-weight: 400;\n                cursor: pointer;\n            }\n            button.active {\n                background-color: #ff4438;\n                border: 1px solid #ff4438;\n                color: white;\n                box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);\n            }\n        `\n    }\n    render() {\n        const isActive = preset => {\n            const nomatch = preset.values.find((v, i) => {\n                return v !== this.selection[i]\n            })\n            return nomatch ? \"\" : \"active\"\n        }\n        const update = preset => ev => {\n            // if active unset, else set\n            const selection = isActive(preset) == \"active\" ? [] : preset.values\n            if (selection.length && this.mcat)\n                clickTrack(\"filter-click\", this.mcat)\n            this.trigger(\"selection\", { key: this.key, selection })\n        }\n        return html`\n            ${this.presets.map(\n                p => html`\n                    <button @click=${update(p)} class=\"${isActive(p)}\">\n                        ${p.name}\n                    </button>\n                `\n            )}\n        `\n    }\n}\ncustomElements.define(\"shop-category-presets\", ShopCategoryPresets)\n","import colorizeFavicon from './colorize-favicon'\n\nconst UA = navigator.userAgent\n\nexport const HandheldScanners = [\n    /Build\\/MRA58K/i // the android scanners Blackstone uses in production/warehouse\n]\n\nconst device = {\n\n    get is_ios(){ return device.isiOS}, // DEPRECATED\n    get is_android(){ return device.isAndroid }, // DEPRECATED\n    get is_mobile(){ return device.isMobile }, // DEPRECATED\n\n    get isWindows(){ return /Win/.test(UA) },\n    get isMac(){ return /Mac/.test(UA) },\n    get isLinux(){ return /Linux/.test(UA) },\n\n    get minScreenSize(){\n        return window.outerWidth < window.outerHeight ? window.outerWidth : window.outerHeight;\n    },\n\n    get isSmallDevice(){ return this.minScreenSize <= 699 },\n\n    get isiOS(){\n        return /iPad|iPhone|iPod/.test(UA)\n        || (device.isMac && navigator.standalone !== undefined ) // iPadOS 13+\n    },\n\n    get isiPad(){\n        return /iPad/.test(UA) || (!device.isiOS && device.isMac && navigator.standalone !== undefined )\n    },\n\n    get isAndroid(){\n        return /android/i.test(UA)\n    },\n\n    get isTouch(){\n        return 'ontouchstart' in window\n    },\n    \n    get isMobile(){\n        return device.isiOS || device.isAndroid\n    },\n\n    get isHandheldScanner(){\n        return !!HandheldScanners.find(patt=>patt.test(UA))\n    },\n\n    // https://developer.chrome.com/multidevice/user-agent\n    get isiOSChrome(){\n        return /CriOS/.test(UA)\n    },\n\n    get isElectron(){\n        return /Electron/.test(UA)\n    },\n\n    get electronVersion(){\n        let matches = UA.match(/Electron\\/([\\d\\.]+) /)\n        return matches ? matches[1] : 0\n    },\n\n    get isChromeInstalledApp(){\n        return this.isInstalled && /Chrome/.test(UA)\n    },\n\n    get isInstalled(){\n        return navigator.standalone || window.matchMedia('(display-mode: standalone)').matches\n    },\n\n    // alias\n    get isStandalone(){ return device.isInstalled },\n\n    applyClasses(){\n        const html = document.documentElement\n        if( !html ) return\n        html.classList.toggle('mobile', device.isMobile)\n        html.classList.toggle('ios', device.isiOS)\n        html.classList.toggle('electron', device.isElectron)\n        html.classList.toggle('android', device.isAndroid)\n        html.classList.toggle('mac', device.isMac)\n        html.classList.toggle('windows', device.isWindows)\n        html.classList.toggle('installed', device.isInstalled)\n    }\n    \n}\n\nexport default device\n\n// https://medium.com/@jonas_duri/enable-dark-mode-with-css-variables-and-javascript-today-66cedd3d7845\nexport const colorScheme = {\n\n    get isDarkMode(){ return window.matchMedia(\"(prefers-color-scheme: dark)\").matches },\n    get isLightMode(){ return window.matchMedia(\"(prefers-color-scheme: light)\").matches },\n    get isUnset(){ return window.matchMedia(\"(prefers-color-scheme: no-preference)\").matches },\n\n    get isSupported(){ return this.isDarkMode || this.isLightMode || this.isUnset },\n    \n    onChange(cb){\n        // first time, setup watchers\n        if( !this._watchers ){\n            this._watchers = new Map()\n\n            window.matchMedia(\"(prefers-color-scheme: dark)\").addListener(e => e.matches && this._dispatchChange('dark'))\n            window.matchMedia(\"(prefers-color-scheme: light)\").addListener(e => e.matches && this._dispatchChange('light'))\n        }\n\n        this._watchers.set(cb, cb)\n    },\n    \n    _dispatchChange(mode){\n        this._watchers.forEach(cb=>{\n            cb(mode)\n        })\n    },\n\n    apply({colorizeFaviconComposition=''}={}){\n        localStorage.setItem('theme-colorize-icon', \n            colorizeFaviconComposition||localStorage.getItem('theme-colorize-icon')||'lighten')\n        this.onChange(this.setTheme.bind(this))\n        this.setTheme()\n        this.setAccent()\n    },\n\n    get theme(){ return localStorage.getItem('theme') },\n    get accent(){ return localStorage.getItem('theme-accent') },\n\n    setTheme(theme){\n\n        const html = document.documentElement\n        let metaThemeColor = document.head.querySelector('meta[name=\"theme-color\"]')\n\n        // create the meta theme color if not found\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color\n        if( !metaThemeColor ){\n            metaThemeColor = document.createElement('meta')\n            metaThemeColor.setAttribute('name', 'theme-color')\n            document.head.appendChild(metaThemeColor)\n        }\n\n        html.removeAttribute('light')\n        html.removeAttribute('dark')\n\n        if( theme === undefined )\n            theme = localStorage.getItem('theme') || 'system'\n        \n        localStorage.setItem('theme', theme)\n\n        if( theme == 'system' )\n            theme = this.isDarkMode ? 'dark' : 'light'\n\n        html.setAttribute(theme, '')\n        metaThemeColor.content = this.getCssVar('theme-bgd')\n        localStorage.setItem('meta-theme-color', metaThemeColor.content)  \n    },\n\n    setAccent(accent){\n\n        const html = document.documentElement\n        let colorizeFaviconComposition = localStorage.getItem('theme-colorize-icon')\n\n        if( accent === undefined ){\n            accent = localStorage.getItem('theme-accent')\n        }else{\n            localStorage.setItem('theme-accent', accent)\n        }\n\n        if( accent ){\n            html.style.setProperty('--theme', `var(--${accent}, #${accent})`);\n            html.style.setProperty('--theme-chosen', `var(--${accent}, #${accent})`);\n\n            if( colorizeFaviconComposition )\n                colorizeFavicon(this.getCssVar('theme'), colorizeFaviconComposition)\n\n        }else{\n            html.style.removeProperty('--theme');\n            html.style.removeProperty('--theme-chosen');\n\n            colorizeFavicon(false)\n        }\n\n    },\n\n    getCssVar(name){\n        if( name[0] != '-' )\n            name = '--'+name\n        return getComputedStyle(document.documentElement).getPropertyValue(name).trim()\n    }\n    \n}\n\n","import { LitElement, html, css } from 'lit-element'\nimport device from '../../../util/device'\n\ncustomElements.define('range-slider', class extends LitElement{\n\n    static get properties(){return {\n        min: {type: Number},\n        max: {type: Number},\n        step: {type: Number},\n        range: {type: Boolean, reflect: true},\n        value: {type: Object},\n        label: {type: String, reflect: true}\n    }}\n\n    constructor(){\n        super()\n        this.mouseUp = this.mouseUp.bind(this)\n        this.mouseMove = this.mouseMove.bind(this)\n\n        this.label = 'auto'\n        this.range = false\n        this.min = 0\n        this.max = 100\n        this.step = 1\n\n        this.valMin = 0\n        this.valMax = 0\n        this.value = [0,0]\n    }\n\n    static get styles(){return css`\n        :host {\n            --size: 6px;\n            --thumbSize: 18px;\n            --color: var(--fc-theme);\n            --thumbColor: var(--color);\n            --bgd: var(--theme-text-accent, rgba(0,0,0,.4));\n            --padding: 10px;\n\n            display: inline-block;\n            vertical-align: middle;\n            position:relative;\n            width: 140px;\n            height: var(--size);\n            margin: 0 auto;\n            padding: var(--padding) 0;\n            cursor: pointer;\n            font-size: .9em;\n            user-select: none;\n            --label-rotation: 45deg;\n        }\n\n        rail, track {\n            display: block;\n            height: var(--size);\n            width: 100%;\n            background: var(--color);\n            border-radius: 6px;\n            position: absolute;\n            top: var(--padding);\n            left: 0;\n        }\n\n        rail {\n            background: var(--bgd);\n        }\n\n        thumb {\n            height: var(--thumbSize);\n            width: var(--thumbSize);\n            transform: translate(-50%, -50%);\n            position: absolute;\n            left: 0;\n            top: calc(var(--padding) + (var(--size) / 2));\n            background: var(--thumbColor);\n            border-radius: var(--thumbSize);\n            box-shadow: 0 0 0 1px var(--theme-bgd, var(--thumb-shadow, #fff)) inset\n        }\n\n        thumb:before {\n            content: '';\n            position: absolute;\n            height: 250%;\n            width: 250%;\n            left: -75%;\n            top: -75%;\n            background: var(--thumbColor);\n            opacity: .2;\n            border-radius: 30px;\n            z-index: -1;\n            transform: scale(.3);\n            transform-origin: center center;\n            opacity: 0;\n            transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);\n        }\n\n        thumb:hover:before {\n            transform: scale(.9);\n            opacity: .2;\n        }\n\n        thumb[active]:before {\n            transform: scale(1);\n            opacity: .2;\n        }\n\n        thumb[active] {\n            background: var(--color);\n        }\n\n        thumb > div {\n            position: absolute;\n            font-size: .9em;\n            background: var(--color);\n            color: #fff;\n            height: 2.2em;\n            width: 2.2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            bottom: 100%;\n            left: 50%;\n            position: absolute;\n            transform-origin: bottom left;\n            transform: translate(0%,-4px) rotate(calc(-1 * var(--label-rotation))) scale(0);\n            border-radius: 50% 50% 50% 0;\n            transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n            \n        }\n\n        :host([label*=\"bottom\"]) thumb > div{\n            bottom: auto;\n            top: calc(0% - 4px);\n            --label-rotation: -135deg;\n        }\n\n        thumb > div > span {\n            transform: rotate(var(--label-rotation))\n        }\n\n        :host([label*=\"show\"]) thumb > div,\n        thumb:hover > div,\n        thumb[active] > div {\n            transform: translate(0%,-4px) rotate(calc(-1 * var(--label-rotation))) scale(1);\n        }\n\n        :host([label*=\"none\"]) thumb > div {\n            display: none !important;\n        }\n\n        :host(:not([range])) thumb[min] {\n            display: none;\n        }\n\n        .labels {\n            display: flex;\n            justify-content: space-between;\n            margin-top: .75em;\n        }\n    `}\n\n    _polishVal(val){\n\n        val = parseFloat((Math.round(val / this.step) * this.step).toFixed(2))\n\n        if( val < this.min )\n            val = this.min\n        \n        if( val > this.max )\n            val = this.max\n        \n        return val\n    }\n\n    set value(val){\n\n        let oldVal = this.value\n        let oldMin = this.valMin\n        let oldMax = this.valMax\n        \n        if( typeof val == 'string' )\n            val = val.split(',').map(s=>parseFloat(s))\n\n        // setting both min and max\n        if( Array.isArray(val) ){\n            if( typeof val[0] !== 'number' || typeof val[1] !== 'number' ) return\n\n            val.sort((a,b) => a-b)\n\n            if( this.range )\n                this.valMin = this._polishVal(val[0])\n\n            this.valMax = this._polishVal(val[1])\n            \n            this.requestUpdate('value', oldVal)\n            return\n        }\n\n        if( typeof val !== 'number' ) return\n\n        val = this._polishVal(val)\n        // console.log(val);\n\n        let dmin = Math.abs(this.valMin - val);\n        let dmax = Math.abs(this.valMax - val)\n\n        if( this._active == 'max' && val == this.valMin ){\n            this.valMax = val\n            if( this.range )\n                this._active = 'min'\n        \n        }else if( this._active == 'min' && val == this.valMax ){\n            this.valMin = val\n            this._active = 'max'\n        }\n        else if( !this.range || (dmin == dmax && this.valMax > this.valMin && this._active == 'max') || dmax < dmin || val > this.valMax ){\n            this.valMax = val\n            this._active = 'max'\n        }else{\n            this.valMin = val\n            if( this.range )\n                this._active = 'min'\n        }\n\n        // this.setAttribute('value', this.value.join(','))\n        if( !this._mouseDown )\n            this._active = null\n\n        // nothing changed\n        if( oldMin == this.valMin && oldMax == this.valMax ) return\n    \n        this._didChange = true\n        \n        let setPropOn = this.parentElement && this.parentElement.tagName == 'FORM-CONTROL' \n                        ? this.parentElement : this\n\n        if( this.range ){\n            setPropOn.style.setProperty('--range-slider-min-val', `'${this.valMin}'`)\n            setPropOn.style.setProperty('--range-slider-max-val', `'${this.valMax}'`)\n        }else{\n            setPropOn.style.setProperty('--range-slider-val', `'${this.valMax}'`)\n        }\n\n        this.requestUpdate('value', oldVal)\n    }\n\n    get value(){\n        return this.range ? [this.valMin, this.valMax] : this.valMax;\n    }\n\n    connectedCallback(){\n        super.connectedCallback()\n        this.addEventListener(device.isMobile ? 'touchstart' : 'mousedown', this.mouseDown, true)\n    }\n\n    disconnectedCallback(){\n        super.disconnectedCallback()\n        this.removeEventListener(device.isMobile ? 'touchstart' : 'mousedown', this.mouseDown, true)\n    }\n\n    get _len(){ return this.max - this.min }\n    get _minLeft(){ return (this.valMin - this.min) / this._len * 100 }\n    get _maxLeft(){ return (this.valMax - this.min) / this._len * 100 }\n    get _trackLength(){ return this._maxLeft - this._minLeft }\n\n    get atMin(){ return (this.range ? this.valMin : this.valMax ) == this.min }\n    get atMax(){ return this.valMax == this.max }\n\n    reset(){\n        this.valMin = this.min\n        this.valMax = this.min\n        // this.valMax = this.range ? this.max : this.min\n        this.value = [this.valMin, this.valMax]\n        this.update()\n    }\n\n    render(){return html`\n        <rail></rail>\n        <track style=\"left:${this._minLeft}%; width:${this._trackLength}%\"></track>\n        <thumb min ?active=${this._active=='min'} style=\"left:${this._minLeft}%\">\n            <div><span>${this.valMin}</span></div>\n        </thumb>\n        <thumb max ?active=${this._active=='max'} style=\"left:${this._maxLeft}%\">\n            <div><span>${this.valMax}</span></div>\n        </thumb>\n        <div class=\"labels\">\n            <b-text sm muted><slot name=\"label:min\"></slot></b-text>\n            <b-text sm muted><slot name=\"label:max\"></slot></b-text>\n        </div>\n    `}\n\n    mouseDown(e){\n        if( !device.isMobile && e.which !== 1 ) return // normal click\n        window.addEventListener(device.isMobile?'touchend':'mouseup', this.mouseUp, true)\n        window.addEventListener(device.isMobile?'touchmove':'mousemove', this.mouseMove, true)\n        this._mouseDown = true\n        this.mouseMove(e)\n    }\n\n    mouseUp(){\n        this._active = null\n        this._mouseDown = false\n        window.removeEventListener(device.isMobile?'touchend':'mouseup', this.mouseUp, true)\n        window.removeEventListener(device.isMobile?'touchmove':'mousemove', this.mouseMove, true)\n        this.update()\n\n        if( this._didChange ){\n            this._didChange = false\n            \n            this.dispatchEvent(new CustomEvent('change', {\n                bubbles: true,\n                composed: true,\n                detail: {value: this.value}\n            }))\n        }\n    }\n\n    mouseMove(e){\n        \n        // already at the min/max, stop tracking mouse move until within range again\n        if( this._active == 'min' && e.pageX < this._lastMousePos && this.atMin ) return\n        if( this._active == 'max' && e.pageX > this._lastMousePos && this.atMax ) return\n        \n        this._lastMousePos = e.pageX\n\n        let rect = this.getBoundingClientRect()\n        let offset = {x: rect.x, y: rect.y}\n\n        // let mouseX = offset.x < e.pageX ? (e.offsetX + e.srcElement.offsetLeft) : e.pagex\n        let eventScreenX = e.touches ? e.touches[0].screenX : e.screenX\n        let mouseX = eventScreenX - window.screenX\n        let x = mouseX - offset.x\n        let percent = x / this.clientWidth * 100;\n\n        let val = ((percent / 100) * this._len) + this.min\n\n        let oldVal = this.value\n        this.value = val\n\n        if( oldVal != this.value )\n        this.dispatchEvent(new CustomEvent('changing', {\n            bubbles: true,\n            composed: true,\n            detail: {value: this.value}\n        }))\n    }\n\n})\n\nexport default customElements.get('range-slider')\n","import {css} from 'lit-element'\n\nconst styles = css`\n\n:host {\n\topacity: 0;\n\tposition: absolute;\n\t/* left: -7px;\n\ttop: -7px;\n\twidth: 48px;\n\theight: 48px; */\n\twidth: 120%;\n\theight: 120%;\n\tleft: -10%;\n\ttop: -10%;\n\tdisplay: block;\n\tz-index: 100;\n\tbackground: currentColor;\n\tborder-radius: 50px;\n}\n\n:host(.enter) {\n\topacity: 0.3;\n\t/* transform: scale(.5); */\n\tanimation: ripple-enter 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\tanimation-name: ripple-enter;\n}\n\n:host(.exit) {\n\topacity: 0;\n\t/* transform: scale(1); */\n\tanimation: ripple-exit 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\tanimation-name: ripple-exit;\n}\n\n\n@-webkit-keyframes ripple-enter {\n  0% {\n    opacity: 0.1;\n    transform: scale(0);\n  }\n  100% {\n    opacity: 0.3;\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes ripple-exit {\n  0% {\n    opacity: .3;\n\ttransform: scale(.7);\n  }\n  100% {\n    opacity: 0;\n\ttransform: scale(1.2);\n  }\n}\n@-webkit-keyframes ripple-pulsate {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(0.92);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n`\n\nclass TouchRippleElement extends HTMLElement {\n\t\n\tconstructor() {\n\t\tsuper()\n\t\t\n\t\tlet shadow = this.attachShadow({mode: 'open'})\n\t\tlet temp = document.createElement('template')\n\t\t\n\t\ttemp.innerHTML = `\n\t\t\t<style>${styles.cssText}</style>\n\t\t`\n\t\t\t\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t}\n\n\tripple(){\n\t\tthis.animate('exit')\n\t}\n\t\n\tenter(){\n\t\tthis.classList.add('enter')\n\t}\n\t\n\thide(){\n\t\tthis.classList.remove('exit')\n\t\tthis.classList.remove('enter')\n\t}\n\t\n\tanimate(str){\n\t\tthis.hide()\n\t\tthis.classList.add(str)\n\t\tsetTimeout(()=>this.classList.remove(str), 550)\n\t}\n\t\n}\n\ncustomElements.define('touch-ripple', TouchRippleElement)\n\nexport default customElements.get('touch-ripple')\n","import {css} from 'lit-element'\nimport './touch-ripple'\n\nconst styles = css`\n\n:host {\n\t--size: 1.6em;\n\t--color: var(--fc-theme);\n\t--colorDisabled: var(--fc-disabled-color, rgba(0, 0, 0, 0.26));\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tflex-grow: 0 !important;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tcursor: pointer;\n\toutline: none;\n}\n\n:host([hidden]) { display: none; }\n\n:host([checked]) svg.uncheck,\n:host(:not([checked])) svg.check {\n\tdisplay: none\n}\n\nmain {\n\tposition: relative;\n\tdisplay: inherit;\n}\n\n:host([placement=\"top\"]) { flex-direction: column-reverse; }\n:host([placement=\"bottom\"]) { flex-direction: column; }\n:host([placement=\"left\"]) { flex-direction: row-reverse; }\n:host([placement=\"right\"]) { flex-direction: row; }\n\nsvg {\n\tfill: currentColor;\n\twidth: var(--size);\n\theight: var(--size);\n\tdisplay: inline-block;\n\ttransition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\tuser-select: none;\n\tflex-shrink: 0;\n\tpadding: .25em;\n}\n\n.switch {\n\tdisplay: none\n}\n\n:host([type=\"switch\"]) svg { display: none; }\n\n:host([type=\"switch\"]) .switch {\n\tdisplay: inline-block;\n}\n\n:host([checked]) {\n\tcolor: var(--color)\n}\n\n:host([disabled]) {\n\tcursor: default;\n}\n\n:host([disabled]) svg {\n\tfill: var(--colorDisabled)\n}\n\n:host([disabled]) label {\n\tcolor: var(--colorDisabled);\n}\n\nmain label {\n\tcursor: pointer;\n}\n\n.indeterminate {\n\tdisplay: none;\n}\n\n.switch {\n\tposition: relative;\n\talign-items: center;\n\tmargin: .5em;\n}\n\n.switch:before, .switch:after {\n\tcontent: \"\";\n\tmargin: 0;\n\toutline: 0;\n\ttransition: all 0.3s ease;\n}\n\n.switch:before {\n\tdisplay: block;\n\twidth: 2em;\n\theight: 1em;\n\tbackground-color: #9E9E9E;\n\tborder-radius: 1em;\n}\n\n.switch:after {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translate(0, -50%);\n\twidth: 1.3em;\n\theight: 1.3em;\n\tbackground-color: #FAFAFA;\n\tborder-radius: 50%;\n\tbox-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.14), 0 2px 2px 0 rgba(0, 0, 0, 0.098), 0 1px 5px 0 rgba(0, 0, 0, 0.084);\n}\n\n\n:host([checked]) .switch:before {\n\tbackground-color: var(--color);\n\topacity: .5\n}\n\n:host([checked]) .switch:after {\n\tbackground-color: var(--color);\n\ttransform: translate(80%, -50%);\n}\n`\n\nclass CheckBoxElement extends HTMLElement {\n\n\tget key(){ return this.getAttribute('key')}\n\t\n\tconstructor() {\n\t\tsuper()\n\t\t\n\t\tlet shadow = this.attachShadow({mode: 'open'})\n\t\tlet temp = document.createElement('template')\n\t\t\n\t\tlet label = this.getAttribute('label') || '<slot name=\"label\"></slot>'\n\t\t\n\t\ttemp.innerHTML = `\n\t\t\t<style>\n\t\t\t${styles.cssText}\n\t\t\t</style>\n\t\t\t<main>\n\t\t\t\t<svg class=\"uncheck\" focusable=\"false\" viewBox=\"0 0 24 24\"><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"></path></svg>\n\t\t\t\t<svg class=\"check\" focusable=\"false\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path></svg>\n\t\t\t\t<div class=\"switch\"></div>\n\t\t\t\t<touch-ripple></touch-ripple>\n\t\t\t</main>\n\t\t\t<label>${label}</label>\n\t\t\t`\n\t\t\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t\t\n\t\tthis.ripple = this.shadowRoot.querySelector('touch-ripple')\n\t\t\n\t\tthis.addEventListener('click', this._onClick.bind(this))\n\t\t\n\t\tthis.addEventListener('keydown', e=>{\n\t\t\tif( ['Space', 'Enter'].includes(e.code) )\n\t\t\t\tthis._onClick()\n\t\t})\n\t\t\n\t\tthis.addEventListener('focus', e=>{\n\t\t\tif( e.relatedTarget && e.relatedTarget != this)\n\t\t\t\tthis.ripple.enter()\n\t\t})\n\t\t\n\t\tthis.addEventListener('blur', e=>{\n\t\t\tif( e.relatedTarget && e.relatedTarget != this)\n\t\t\t\tthis.ripple.hide()\n\t\t})\n\t}\n\t\n\tconnectedCallback(){\n\t\tif( !this.hasAttribute('tabindex') )\n\t\t\tthis.setAttribute('tabindex', '0')\n\t}\n\t\n\t_onClick(){\n\t\t\n\t\tif( this.disabled ) return\n\t\t\n\t\tthis.ripple.ripple()\n\t\t\n\t\tthis.checked = !this.checked\n\t\t\n\t\tvar event = new CustomEvent('change', {\n\t\t\tbubbles: true,\n\t\t\tcomposed: true,\n\t\t\tdetail: {\n\t\t\t\tvalue: this.checked\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.dispatchEvent(event)\n\t\t\n\t\t// this.blur()\n\t}\n\t\n\tset checked(val){\n\t\tif( val === '0' || val === '' ) val = false\n\t\tval ? this.setAttribute('checked', '') : this.removeAttribute('checked')\n\t}\n\t\n\tget checked(){ return this.hasAttribute('checked') }\n\tget value(){ return this.checked }\n\tset value(val){ this.checked = val }\n\t\n\tget disabled(){ return this.hasAttribute('disabled') }\n\tset disabled(val=true){val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled')}\n\t\n}\n\ncustomElements.define('check-box', CheckBoxElement)\n\nexport default customElements.get('check-box')\n","/*\n\tSVG and idea taken from https://ant.design/components/button/\n\t\n\tExamples: \n\t<circle-spinner/>\n\t<circle-spinner style=\"--size:.8em; color: white\"/>\n*/\n\nclass SpinnerElement extends HTMLElement {\n\t\n    constructor() {\n        super()\n\t\t\n        let shadow = this.attachShadow({mode: 'open'})\n        let temp = document.createElement('template')\n        \n        temp.innerHTML = `<style>\n\t\t\t:host {\n\t\t\t\t--size: .8em;\n\t\t\t\theight: var(--size);\n\t\t\t    width: var(--size);\n\t\t\t    display: inline-block;\n\t\t\t    vertical-align: middle;\n\t\t\t}\n\t\t\t\n\t\t\t:host(.overlay) {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tz-index: 10000;\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes spin {\n\t\t\t\t100% {\n\t\t\t\t    transform: rotate(360deg);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsvg {\n\t\t\t\tanimation: spin 1s infinite linear;\n\t\t\t\ttransform-origin: center center;\n\t\t\t}\n\t\t\t</style>\n\t\t\t<svg viewBox=\"0 0 1024 1024\" class=\"spin\" data-icon=\"loading\" width=\"100%\" height=\"100%\" fill=\"currentColor\" aria-hidden=\"true\">\n\t\t\t\t<path d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\"></path>\n\t\t\t</svg>`\n\t\t\t\n        this.shadowRoot.appendChild(temp.content.cloneNode(true));\n    }\n}\n\ncustomElements.define('b-spinner', SpinnerElement)\n","/*\n\thttps://icomoon.io/app\n*/\nimport { LitElement, html, css } from 'lit-element';\n\nconst SVG_ICONS = new Map()\n\nfunction registerIcon(name, icon, {prefix='icon-'}={}){\n\n\tlet d = document.createElement('div')\n\td.innerHTML = icon\n\ticon = d.firstElementChild\n\n\t// if no name, get it from the icon attribute\n\tif( !name ){\n\t\tname = icon.id || icon.name || ''\n\t\tname = name.replace(prefix, '')\n\t}\n\n\tif( !name )\n\t\treturn console.warn('Icons must have a name')\n\n\tif( SVG_ICONS.get(name) )\n\t\treturn console.warn('There is already an icon registered with that name' )\n\n\tSVG_ICONS.set(name, icon)\n}\n\nlet hasWarnedNoIcons = false\nfunction warnNoIcons(){\n\tif( hasWarnedNoIcons ) return\n\thasWarnedNoIcons = true\n\tconsole.warn('No icons have been registered. Do so with `IconElement.register()` – Or import `bui/elements/icons/_all`')\n}\n\nexport default class IconElement extends HTMLElement {\n\n\tstatic register(...icons){\n\t\ticons.forEach(icon=>{\n\t\t\tlet name = ''\n\n\t\t\tif( Array.isArray(icon) )\n\t\t\t\t[name, icon] = icon\n\t\t\t\t\n\t\t\tregisterIcon(name, icon)\n\t\t})\n\t}\n\n\t// not ideal...\n\tget styles(){return /*css*/`\n\t\t:host {\n\t\t\tdisplay: inline-flex;\n\t\t\tvertical-align: middle;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcolor: inherit;\n\t\t\t--size: 1em;\n\t\t\theight: var(--size);\n\t\t}\n\n\t\t:host([hidden]) {\n\t\t\tdisplay: none !important;\n\t\t}\n\n\t\t:host([link]) {\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t:host([muted]) {\n\t\t\topacity: .5;\n\t\t}\n\n\t\t:host([square]) {\n\t\t\twidth: var(--size);\n\t\t}\n\n\t\t:host([invalid]) {\n\t\t\tbackground: #f44336;\n\t\t}\n\n\t\tsvg {\n\t\t\theight: 100%;\n\t\t\t/* width: 100%; */\n\t\t\tdisplay: inline-block;\n\t\t\tfill: currentColor;\n\t\t\tcolor: currentColor;\n\t\t}\n\n\t\t@keyframes rotate360 {\n\t\t\tto { transform: rotate(360deg); }\n\t\t}\n\n\t\t@keyframes rotate360CCW {\n\t\t\tto { transform: rotate(-360deg); }\n\t\t}\n\n\t\t:host([spin]) svg {\n\t\t\tanimation: 1600ms rotate360 infinite linear;\n\t\t}\n\n\t\t:host([name=\"arrows-ccw\"][spin]) svg {\n\t\t\tanimation: 1600ms rotate360CCW infinite linear;\n\t\t}\n\t`}\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.attachShadow({mode: 'open'})\n        let temp = document.createElement('template')\n\t\ttemp.innerHTML = `<style>\n\t\t${this.styles}\n\t\t</style>\n\t\t<slot></slot>\n\t\t`\n\t\tthis.shadowRoot.appendChild(temp.content.cloneNode(true));\n\t}\n\n\t_setSVG(){\n\n\t\tif( SVG_ICONS.size == 0 )\n\t\t\twarnNoIcons()\n\n\t\tif( this._svg )\n\t\t\tthis._svg.remove()\n\n\t\tlet svg = SVG_ICONS.get(this.name)\n\t\t\n\t\tif( svg ){\n\t\t\tthis._svg = svg.cloneNode(true)\n\t\t\tthis.removeAttribute('invalid')\n\t\t\tthis.shadowRoot.appendChild(this._svg)\n\t\t}else{\n\t\t\tthis.setAttribute('invalid', '')\n\t\t}\n\t}\n\n\tstatic get observedAttributes() { return ['name']; }\n\t\n\tattributeChangedCallback(name, oldValue, newValue){\n\t\t\n\t\tif( name === 'name' )\n\t\t\tthis._setSVG()\n\t}\n\t\n\tget name(){ return this.getAttribute('name')}\n\tset name(val){ return this.setAttribute('name', val)}\n\n\tset spin(val){\n\t\tthis.toggleAttribute('spin', Boolean(val))\n\t}\n\tget spin(){\n\t\treturn this.hasAttribute('spin')\n\t}\n\n}\n\t\ncustomElements.define('b-icon', IconElement)\n\nexport class IconList extends LitElement {\n\n\tstatic get properties(){return {\n\t\tcols: {type: Number, reflect: true}\n\t}}\n\n\tconstructor(){\n\t\tsuper()\n\t\tthis.cols = 6\n\t}\n\n\tstatic get styles(){return css`\n\t\t:host {\n\t\t\tdisplay: block;\n\t\t\tcolumn-count: 6;\n\t\t\tgap: 1em;\n\t\t\twidth: 100%;\n\t\t\tfont-size:1.2em;\n\t\t\tpadding: 1em;\n\t\t\toverflow: auto;\n\t\t}\n\n\t\t:host([cols=\"1\"]) { column-count: 1}\n\t\t:host([cols=\"2\"]) { column-count: 2}\n\t\t:host([cols=\"3\"]) { column-count: 3}\n\t\t:host([cols=\"4\"]) { column-count: 4}\n\t\t:host([cols=\"5\"]) { column-count: 5}\n\t\t:host([cols=\"6\"]) { column-count: 6}\n\n\t\t:host > div {\n\t\t\tmargin: .75em;\n\t\t}\n\n\t\t:host > div:first-child {\n\t\t\tmargin-top: 0;\n\t\t}\n\n\t\tb-icon {\n\t\t\twidth: 1.6em;\n\t\t}\n\n\t\tsmall {\n\t\t\tcolor: var(--theme-text-accent);\n\t\t}\n\n\t\t@media (max-width: 550px) {\n            :host {\n                column-count: 1 !important;\n            }\n        }\n\t`}\n\n\trender(){return html`\n\t\t${Array.from(SVG_ICONS.keys()).map(name=>html`\n\t\t\t<div>\n\t\t\t\t<b-icon name=${name}></b-icon> <small>${name}</small>\n\t\t\t</div>\n\t\t`)}\n\t`}\n}\ncustomElements.define('b-icon-list', IconList)","import { LitElement, html, css } from 'lit-element';\nimport './spinner'\nimport './icon'\n\nexport default class BtnElement extends LitElement {\n\n    static get properties() { return {\n        href: {type: String, reflect: true},\n        value: {type: String, reflect: true},\n        icon: { type: String },\n        spin: {type: Boolean, reflect: true, attribute: 'spin'}\n    }}\n\n    static get styles(){ return css`\n    \n        :host{\n            --red: var(--red-700);\n            /* --black: #333;\n            --orange: #F57C00;\n            --blue: #2196F3;\n            --red: #d32f2f;\n            --gray: #444444;\n            --green: #27ae60;\n            --yellow: #f2d57e;\n            --teal: #009688;\n            --purple: #7E57C2;\n            --brown: #795548;\n            --pink: #E91E63; */\n\n            --radius: 3px;\n            --color: var(--b-btn-bgd, var(--black)) ;\n            --bgdColor: var(--color);\n            --hoverBgdColor: rgba(255,255,255,.1);\n            --textColor: var(--b-btn-color, #fff);\n            --borderColor: var(--color);\n            --borderStyle: solid;\n            --borderWidth: 1px;\n            --padding: .4em .6em;\n\n            display: inline-grid;\n            position: relative;\n            box-sizing: border-box;\n            background: var(--bgdColor);\n            color: var(--textColor);\n            border-radius: var(--radius);\n            cursor: pointer;\n            transition: \n                color 160ms,\n                background-color 160ms,\n                border 160ms;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            text-rendering: optimizeLegibility;\n            font-size: .9rem;\n            line-height: 1rem;\n            font-weight: bold;\n            font-family: var(--b-btn-font);\n\n            -webkit-touch-callout: none; /* iOS Safari */\n            -webkit-user-select: none; /* Safari */\n            -khtml-user-select: none; /* Konqueror HTML */\n            -moz-user-select: none; /* Firefox */\n            -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; \n        }\n\n        /* hide by default */\n        @media print {\n            :host {\n                display: none;\n            }\n        }\n\n        :host([hidden]) {\n            display: none !important;\n        }\n\n        main {\n            border-radius: var(--radius);\n            position: relative;\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            padding: var(--padding);\n            box-sizing: border-box;\n            /*padding-bottom: .3em;*/ /* remove descender line to make it look more centered*/\n            text-overflow: ellipsis;\n            border: var(--borderStyle) var(--borderWidth) var(--borderColor);\n            min-width: 0;\n            /* word-break: break-all; */\n            /* transition: 120ms; */\n        }\n\n        main > span {\n            display: inline-flex;\n            justify-content: center;\n        }\n\n        slot {\n            display: block;\n            margin-bottom: -.1em; /* remove descender line to make it look more centered*/\n        }\n\n        slot::slotted(*) {\n            display: inline-block;\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n\n        .hover {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n            left: 0;\n            top: 0;\n            background: var(--hoverBgdColor);\n            visibility: hidden;\n            opacity: 0;\n            /* mix-blend-mode: saturation; */\n            border-radius: var(--radius);\n            /* transition: 120ms; */\n        }\n\n        @media (hover) {\n            :host(:hover) .hover {\n                opacity: 1;\n                visibility: visible;\n            }\n        }\n\n        /* b-icon,\n        ::slotted(b-icon) {\n            vertical-align: bottom;\n        } */\n\n        b-spinner {\n            opacity: 0;\n            visibility: hidden;\n            --size: 1em;\n            margin-left: -1.35em;\n            margin-right: .35em;\n            transition: 120ms;\n        }\n\n        :host([spin]) b-spinner {\n            opacity: 1;\n            visibility: visible;\n            margin-left: 0;\n        }\n\n        :host([spin]) b-icon {\n            display: none;\n        }\n\n        main b-icon {\n            margin-right: .35em;\n            margin-left: -.15em;\n        }\n\n        :host([stacked]) {\n            --padding: .3em .5em .1em .5em;\n        }\n\n        :host([stacked]) main {\n            display: inline-grid;\n            align-content: center;\n        }\n\n        :host([stacked]) b-icon {\n            font-size: 1.2em;\n            margin: 0;\n        }\n\n        :host([stacked]) slot {\n            font-size: .6em;\n            line-height: 1em;\n        }\n\n        :host([stacked]) slot::slotted(*) {\n            opacity: var(--b-btn-stacked-label-opacity, .5);\n        }\n\n        :host([stacked]) slot[name=\"icon\"] {\n            font-size: 1em;\n            display: contents;\n        }\n\n        :host([stacked]) slot[name=\"icon\"]::slotted(*),\n        :host([stacked]) slot[name=\"icon\"] b-icon{\n            opacity: var(--b-btn-stacked-icon-opacity, 1);\n        }\n\n        :host([stacked]) b-spinner {\n            font-size: 1.2em;\n            margin-right: 0;\n            margin-left: -1em;\n        }\n        :host([stacked][spin]) b-spinner {\n            margin-left: 0;\n        }\n\n        :host([block]) {\n            display: block;\n            text-align: center\n        }\n\n        :host([block]) main {\n            display: flex;\n            justify-content: center\n        }\n\n        :host(:empty) {\n            --padding: .4em .5em;\n        }\n\n        :host(:empty) main b-icon {\n            margin-left: 0;\n            margin-right: 0;\n        }\n\n        /* offset play icon to make it appear more centered */\n        :host(:empty) main b-icon[name=\"play\"] {\n\t\t\tmargin: 0 -.1em 0 .1em;\n        }\n\n        :host([color^=\"primary\"])  { --color: var(--color-primary); }\n        :host([color^=\"theme\"])  { --color: var(--theme); }\n        :host([color^=\"black\"])  { --color: var(--black); }\n        :host([color^=\"white\"])  { --color: var(--white); --textColor: var(--black); }\n        :host([color^=\"orange\"]) { --color: var(--orange); }\n        :host([color^=\"blue\"])   { --color: var(--blue); }\n        :host([color^=\"red\"])    { --color: var(--red); }\n        :host([color^=\"gray\"])   { --color: var(--gray); }\n        :host([color^=\"green\"])  { --color: var(--green); }\n        :host([color^=\"yellow\"]) { --color: var(--yellow); }\n        :host([color^=\"teal\"])   { --color: var(--teal); }\n        :host([color^=\"purple\"]) { --color: var(--purple); }\n        :host([color^=\"brown\"])  { --color: var(--brown); }\n        :host([color^=\"pink\"])   { --color: var(--pink); }\n\n        @media (hover){\n        :host([color*=\"hover-black\"]:hover)  { --color: var(--black); }\n        :host([color*=\"hover-orange\"]:hover) { --color: var(--orange); }\n        :host([color*=\"hover-blue\"]:hover)   { --color: var(--blue); }\n        :host([color*=\"hover-red\"]:hover)    { --color: var(--red); }\n        :host([color*=\"hover-gray\"]:hover)   { --color: var(--gray); }\n        :host([color*=\"hover-green\"]:hover)  { --color: var(--green); }\n        :host([color*=\"hover-yellow\"]:hover) { --color: var(--yellow); }\n        :host([color*=\"hover-teal\"]:hover)   { --color: var(--teal); }\n        :host([color*=\"hover-purple\"]:hover) { --color: var(--purple); }\n        :host([color*=\"hover-brown\"]:hover)  { --color: var(--brown); }\n        :host([color*=\"hover-pink\"]:hover)   { --color: var(--pink); }\n        }\n\n        :host([pill]) {\n            --radius: 1em;\n        }\n\n        /* @media (hover) { */\n        :host([outline]:not(:hover)) {\n            --bgdColor: transparent;\n            --textColor: var(--color);\n        }\n        /* } */\n\n        /* :host([outline]:hover){\n            --bgdColor: var(--color);\n            --textColor: inherit;\n        } */\n\n        :host([text]),\n        :host([clear]) {\n            --bgdColor: transparent;\n            --textColor: var(--color);\n            --borderColor: transparent;\n        }\n\n        /* :host([text]) .hover,\n        :host([clear]) .hover {\n            display: none;\n        } */\n\n        :host([text]) {\n            font-size: 1em;\n            font-weight: normal;\n        }\n\n        @media (hover){\n        :host([text]:hover),\n        :host([clear]:hover) {\n            --bgdColor: rgba(0,0,0,.05);\n        }}\n\n        :host([text].popover-open),\n        :host([clear].popover-open) {\n            --bgdColor: rgba(0,0,0,.05);\n        }\n\n        :host([xs]) { font-size: .6rem; }\n        :host([sm]) { font-size: .8rem; }\n        :host([lg]) { font-size: 1.2rem; }\n        :host([xl]) { font-size: 1.4rem; }\n\n        /* floating action btn */\n        :host([fab]) {\n            position: absolute;\n            z-index: 100;\n            box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2),\n                        0px 6px 10px 0px rgba(0,0,0,0.14),\n                        0px 1px 18px 0px rgba(0,0,0,0.12);\n            bottom: 1rem;\n            right: 1rem;\n            font-size: 1.4em;\n            width: 2em;\n            height: 2em;\n            --radius: 2em;\n            overflow: hidden;\n        }\n\n        :host([fab]) b-spinner {\n            margin-right: 0;\n            margin-left: -1em;\n        }\n\n        :host([fab][spin]) b-spinner {\n            margin-left: 0;\n        }\n\n        @keyframes shake {\n            from,\n            to {\n                transform: translate3d(0, 0, 0);\n            }\n\n            15%,\n            45%,\n            75% {\n                transform: translate3d(-.25em, 0, 0);\n            }\n\n            30%,\n            60%,\n            90% {\n                transform: translate3d(.25em, 0, 0);\n            }\n        }\n\n        :host(.shake) {\n            animation-name: shake;\n            animation-duration: 700ms;\n            animation-fill-mode: both;\n        }\n    `}\n\n    render(){ return html`\n        <div class=\"hover\" part=\"hover\"></div>\n        <main part=\"main\">\n            <span>\n                <b-spinner></b-spinner>\n                <slot name=\"icon\">\n                    ${this.icon?html`<b-icon part=\"icon\" name=\"${this.icon}\"></b-icon>`:''}\n                </slot>\n            </span>\n            <slot></slot>\n        </main>\n    `}\n\n\tconstructor(){\n\t\tsuper()\n        this.icon = ''\n        this.spin = false\n\t}\n\n    firstUpdated(){\n        this.addEventListener('click', ()=>{\n            if( this.href )\n                if( this.getAttribute('target') == '_blank' )\n                    window.open(this.href)\n                else\n                    window.location = this.href\n        }, true)\n    }\n\n    shake(){\n        this.classList.add('shake')\n        setTimeout(()=>{\n            this.classList.remove('shake')\n        },1000)\n    }\n\n}\n\ncustomElements.define('b-btn', BtnElement)\n","import { LitElement, html, css } from 'lit-element'\n\ncustomElements.define('b-btn-group', class extends LitElement{\n\n    static get styles(){return css`\n        :host {\n            display: inline-flex;\n        }\n\n        :host([hidden]) {\n            display: none;\n        }\n\n        ::slotted(b-btn:first-of-type:not(:last-of-type)){\n            border-radius: var(--radius) 0 0 var(--radius);\n        }\n\n        ::slotted(b-btn:not(:first-of-type):not(:last-of-type)){\n            border-radius: 0;\n            border-left: solid 1px rgba(0,0,0,.2);\n        }\n\n        ::slotted(b-btn:last-of-type:not(:first-of-type)){\n            border-radius: 0 var(--radius) var(--radius) 0;\n            border-left: solid 1px rgba(0,0,0,.2);\n        }\n\n        ::slotted(b-btn:not(:first-of-type)[clear]) {\n            border-left: solid 1px rgba(0,0,0,.1);\n        }\n\n\n        :host([vert]) {\n            flex-direction: column;\n        }\n\n        :host([vert]) ::slotted(b-btn:first-of-type:not(:last-of-type)){\n            border-radius: var(--radius) var(--radius) 0 0;\n        }\n\n        :host([vert]) ::slotted(b-btn:not(:first-of-type):not(:last-of-type)){\n            border-radius: 0;\n            border-top: solid 1px rgba(0,0,0,.2);\n            border-left: none;\n        }\n\n        :host([vert]) ::slotted(b-btn:last-of-type:not(:first-of-type)){\n            border-radius: 0 0 var(--radius) var(--radius);\n            border-top: solid 1px rgba(0,0,0,.2);\n            border-left: none;\n        }\n    `}\n\n    render(){return html`\n        <slot></slot>\n    `}\n\n})\n\nexport default customElements.get('b-btn-group')","import { BaseElement } from \"./components/BaseElement.js\"\nimport { ShopSubcategoryList } from \"./components/ShopSubcategoryList.js\"\nimport { ShopSubcategoryTile } from \"./components/ShopSubcategoryTile.js\"\nimport { ShopCategoryView } from \"./components/ShopCategoryView.js\"\nimport { ShopCategoryProduct } from \"./components/ShopCategoryProduct.js\"\nimport { ShopCategoryFilter } from \"./components/ShopCategoryFilter.js\"\nimport { ShopCategoryPagination } from \"./components/ShopCategoryPagination.js\"\nimport { ShopWishlist } from \"./components/ShopWishlist.js\"\nimport { didNavigate } from \"./components/utils.js\"\nimport \"blackstone-ui/presenters/form/controls/range-slider.js\"\nimport \"blackstone-ui/presenters/form/controls/check-box.js\"\nimport \"blackstone-ui/elements/btn.js\"\nimport \"blackstone-ui/elements/btn-group.js\"\n\nwindow.addEventListener(\"popstate\", () => didNavigate())\n\ncustomElements.define(\"base-element\", BaseElement)\ncustomElements.define(\"shop-subcategory-list\", ShopSubcategoryList)\ncustomElements.define(\"shop-subcategory-tile\", ShopSubcategoryTile)\ncustomElements.define(\"shop-category-view\", ShopCategoryView)\ncustomElements.define(\"shop-category-product\", ShopCategoryProduct)\ncustomElements.define(\"shop-category-filter\", ShopCategoryFilter)\ncustomElements.define(\"shop-category-pagination\", ShopCategoryPagination)\ncustomElements.define(\"shop-wishlist\", ShopWishlist)\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate, categories } from \"./utils.js\"\n\nexport class ShopSubcategoryList extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            .subs {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 1rem;\n                margin: 1rem 0 0;\n            }\n            @media (min-width: 767px) {\n                .subs {\n                    grid-template-columns: repeat(5, 1fr);\n                }\n            }\n            .breadcrumbs {\n                margin: 0 0 1rem;\n            }\n            .breadcrumbs a {\n                color: #313333;\n                font-size: 0.85rem;\n                text-decoration: none;\n            }\n\n            .breadcrumbs a + a:before {\n                font-family: hfont;\n                content: var(--icon-content-caret-right);\n                font-size: 0.6em;\n                margin: 0 0.25em;\n                position: relative;\n                top: -1px;\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            current: { type: Object },\n            subs: { type: Array },\n            id: { type: String },\n            search: { type: String, reflect: true }\n        }\n    }\n\n    get breadcrumbs() {\n        return this.current.path\n            .slice(0)\n            .reverse()\n            .map(id => {\n                return this.categories.find(c => c.id == id)\n            })\n    }\n\n    navigate(init = false) {\n        const stub = document.location.pathname.replace(/^\\/|\\/$/g, \"\")\n        const current = this.categories.find(c => c.url == stub)\n        if (current) {\n            Object.assign(this, {\n                current,\n                id: current.id,\n                subs: this.categories\n                    .filter(c => c.path.slice(1).shift() == current.id)\n                    .sort((a, b) => {\n                        const asort = parseInt(a.sortOrder)\n                        const bsort = parseInt(b.sortOrder)\n                        return asort == bsort ? 0 : asort > bsort ? 1 : -1\n                    })\n            })\n        } else {\n            // Home / Search\n            Object.assign(this, {\n                current: { url: \"\", path: [] },\n                id: null,\n                subs: this.categories\n                    .filter(c => c.path.length == 1)\n                    .sort((a, b) => {\n                        const asort = parseInt(a.sortOrder)\n                        const bsort = parseInt(b.sortOrder)\n                        return asort == bsort ? 0 : asort > bsort ? 1 : -1\n                    })\n            })\n        }\n    }\n\n    async firstUpdated() {\n        this.categories = await categories\n        this.navigate(true)\n        document.addEventListener(\"didNavigate\", () => this.navigate())\n    }\n\n    fixHeaderHeights() {\n        const tiles = [...this.root.querySelectorAll(\"shop-subcategory-tile\")]\n        tiles.map(t => (t.headerHeight = 0))\n        const tops = {}\n        tiles\n            .map(t => {\n                const pos = t.headerPosition\n                tops[pos.top] = tops[pos.top] || []\n                tops[pos.top].push(pos.height)\n                return t\n            })\n            .map(t => {\n                const pos = t.headerPosition\n                const max = tops[pos.top].reduce(\n                    (acc, t) => (t > acc ? t : acc),\n                    0\n                )\n                t.headerHeight = max\n            })\n    }\n\n    render() {\n        const nav = (ev, url) => {\n            ev.preventDefault()\n            history.pushState({}, this.title, url)\n            didNavigate()\n            return false\n        }\n\n        if (!this.current) return\n        if (this.search) return\n\n        setTimeout(() => this.fixHeaderHeights(), 80)\n        setTimeout(() => this.fixHeaderHeights(), 500)\n\n        return html`\n            <div class=\"breadcrumbs\">\n                <a href=\"/\">Home</a>\n                ${this.breadcrumbs.map(page => {\n                    const url = `/${page.url}/`\n                    return html`\n                        <a @click=${ev => nav(ev, url)} href=${url}>\n                            ${page.title}\n                        </a>\n                    `\n                })}\n            </div>\n            <div class=\"subs\">\n                ${this.subs.map(\n                    sub => html`\n                        <shop-subcategory-tile\n                            id=${sub.id}\n                            title=${sub.title}\n                            url=${sub.url}\n                            description=${sub.description}\n                            image=${sub.image_url}\n                            path=${sub.path}\n                        ></shop-subcategory-tile>\n                    `\n                )}\n            </div>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate } from \"./utils.js\"\n\nexport class ShopSubcategoryTile extends BaseElement {\n    static get properties() {\n        return {\n            id: { type: String },\n            title: { type: String },\n            url: { type: String },\n            description: { type: String },\n            image: { type: String },\n            path: { type: Array }\n        }\n    }\n\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            a {\n                cursor: pointer;\n            }\n            .tile {\n                display: block;\n            }\n            img {\n                width: 100%;\n            }\n            header {\n                font-size: 20px;\n                font-weight: 700;\n                padding: 0.5rem 0;\n                box-sizing: border-box;\n            }\n        `\n    }\n\n    get headerPosition() {\n        const h = this.root.querySelector(\"header\")\n        return {\n            top: h.offsetTop,\n            height: h.offsetHeight\n        }\n    }\n\n    get headerHeight() {\n        return this.root.querySelector(\"header\").offsetHeight\n    }\n\n    set headerHeight(value) {\n        const px = value ? `${value}px` : \"auto\"\n        this.root.querySelector(\"header\").style.height = px\n    }\n\n    get defaultImage() {\n        return `<svg viewBox=\"0 0 550 550\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect x=\"0\" y=\"0\" width=\"550\" height=\"550\" fill=\"#c9c6c3\"/>\n            <rect x=\"210\" y=\"235\" width=\"110\" height=\"81\" rx=\"4\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.4)\" stroke-width=\"10\" />\n            <circle cx=\"244\" cy=\"266\" r=\"12\" fill=\"rgba(255,255,255,0.4)\"/>\n            <path d=\"M220 304Q226 282 248 292Q260 297 268 286C277 270,312 270,310 304Z\" fill=\"rgba(255,255,255,0.4)\"/>\n        </svg>`.replace(/\\n\\s+/gm, \"\")\n    }\n\n    get defaultImageBase64() {\n        const b64 = btoa(this.defaultImage)\n        return `data:image/svg+xml;base64,${b64}`\n    }\n\n    render() {\n        const nav = () => {\n            history.pushState({}, this.title, `/${this.url}/`)\n            didNavigate()\n        }\n\n        return html`\n            <a @click=${nav} class=\"tile\">\n                <header>${this.title}</header>\n                <main>\n                    <img src=${this.image || this.defaultImageBase64} />\n                </main>\n                <footer></footer>\n            </a>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\nimport { didNavigate, categories, aFetch } from \"./utils.js\"\n\nexport class ShopCategoryView extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: grid;\n                margin: 1rem 0 3rem;\n                gap: 1rem;\n                align-items: start;\n            }\n            .filters {\n                grid-row: 1 / auto;\n            }\n            .results {\n                display: grid;\n                grid-template-columns: repeat(2, 1fr);\n                gap: 1rem;\n                grid-row: 2 / auto;\n            }\n            shop-category-pagination {\n                grid-column: span 2;\n            }\n\n            shop-category-filter {\n                display: none;\n                padding: 0 1rem;\n                margin: 0 0 5px;\n            }\n\n            .showfilter shop-category-filter {\n                display: block;\n                background: rgba(255, 255, 255, 0.7);\n                border-radius: 3px;\n            }\n\n            .mobile-filter-toggle a {\n                display: block;\n                border: 2px solid #ff4438;\n                color: #ff4438;\n                letter-spacing: 0.0625em;\n                text-transform: none;\n                text-decoration: none;\n                line-height: 2em;\n                font-weight: 400;\n                cursor: pointer;\n                padding: 0.5em 0em;\n                text-align: center;\n                margin: 0 0 1rem;\n                border-radius: 50px;\n            }\n            .showfilter .mobile-filter-toggle a {\n                color: white;\n                background-color: #ff4438;\n            }\n\n            @media (min-width: 767px) {\n                .mobile-filter-toggle {\n                    display: none;\n                }\n                :host {\n                    grid-template-columns: repeat(5, 1fr);\n                }\n                .filters {\n                    grid-row: 1 / auto;\n                }\n                .results {\n                    grid-row: 1 / auto;\n                    grid-template-columns: repeat(4, 1fr);\n                    grid-column: span 4;\n                }\n                shop-category-pagination {\n                    grid-column: span 4;\n                }\n                shop-category-filter {\n                    display: block;\n                    padding: 0;\n                    margin: 0 0 1rem;\n                }\n                .showfilter shop-category-filter {\n                    background: transparent;\n                }\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            url: { type: Object },\n            page: { type: Number },\n            title: { type: String },\n            limit: { type: Number },\n            count: { type: Number },\n            filters: { type: Array },\n            products: { type: Array },\n            type: { type: String },\n            search: { type: String, reflect: true },\n            showfilter: { type: Boolean },\n            resultId: { type: Number } // ensure well ordered fetch\n        }\n    }\n\n    constructor() {\n        super()\n        this.resultId = 0\n        this.products = []\n        this.filters = []\n        this.url = new URL(\"http://example.com\")\n        this.type = \"\"\n        this.title = \"\"\n        this.showfilter = window.innerWidth > 767\n        this.currentFetch = null\n        this.on(\"selection\", ev => {\n            const { key, selection } = ev.detail\n            const url = new URL(window.location)\n            url.searchParams.set(key, selection.join(\"|\"))\n            url.searchParams.set(\"page\", \"1\")\n            for (const [k, v] of url.searchParams.entries()) {\n                if (!v) url.searchParams.delete(k)\n            }\n            history.pushState({}, null, url.toString())\n            didNavigate()\n        })\n        this.on(\"page\", ev => {\n            const url = new URL(window.location)\n            url.searchParams.set(\"page\", ev.detail)\n            history.pushState({}, null, url.toString())\n            didNavigate()\n        })\n    }\n\n    get endpoint() {\n        return window.siteConfig.collectionEndpoint\n    }\n\n    async fetch(url) {\n        if (this.currentFetch) this.currentFetch.abort()\n\n        const slug = url.pathname.replace(/^\\/|\\/$/g, \"\")\n        const category = (await categories).find(c => c.url == slug) || {\n            type: \"index\",\n            title: \"Collection\"\n        }\n\n        const resultId = this.resultId + 1\n\n        // Clear screen\n        Object.assign(this, {\n            url,\n            products: null,\n            page: 1,\n            limit: 16,\n            count: 0,\n            title: category.title,\n            type: category.type,\n            resultId\n        })\n\n        if (category.type !== \"category\") {\n            return\n        }\n\n        // Fetch results\n        const endpoint = new URL(`${this.endpoint}`, window.origin)\n        // mirror window search params\n        for (const [k, v] of url.searchParams.entries()) {\n            endpoint.searchParams.set(k, v)\n        }\n        // add category search param\n        endpoint.searchParams.set(\"category\", category.id)\n        endpoint.searchParams.set(\"limit\", url.searchParams.get(\"limit\") || 16)\n        endpoint.searchParams.set(\"page\", url.searchParams.get(\"page\") || 1)\n\n        try {\n            this.currentFetch = aFetch(endpoint)\n            const res = await this.currentFetch.ready\n            const data = await res.json()\n            this.currentFetch = null\n\n            const currentUrl = new URL(window.location)\n\n            const filters = (data.filters || []).map(f => {\n                f.key = `filter[${f._id}]`\n                f.unit = f.unit || \"\"\n                const param = currentUrl.searchParams.get(f.key) || \"\"\n                f.selection = param.split(\"|\").filter(f => f)\n                return f\n            })\n\n            // console.log(resultId, this.resultId)\n            if (resultId == this.resultId) {\n                Object.assign(this, {\n                    page: data.page,\n                    limit: data.limit,\n                    count: data.count,\n                    filters: filters,\n                    products: data.products || []\n                })\n            }\n        } catch (e) {\n            if (e.name == \"AbortError\") {\n                console.log(`Fetch cancelled ${endpoint}`)\n            } else {\n                throw e\n            }\n        }\n    }\n\n    async fetchSearch(url, searchString) {\n        const resultId = this.resultId + 1\n\n        // Clear screen\n        Object.assign(this, {\n            url,\n            products: null,\n            page: 1,\n            limit: 16,\n            count: 0,\n            title: \"Search\",\n            type: \"category\",\n            resultId\n        })\n\n        // Fetch results\n        const endpoint = new URL(`${this.endpoint}`, window.origin)\n        // mirror window search params\n        for (const [k, v] of url.searchParams.entries()) {\n            endpoint.searchParams.set(k, v)\n        }\n        endpoint.searchParams.set(\"q\", searchString)\n        endpoint.searchParams.set(\"category\", \"\")\n        endpoint.searchParams.set(\"limit\", url.searchParams.get(\"limit\") || 16)\n        endpoint.searchParams.set(\"page\", url.searchParams.get(\"page\") || 1)\n        const res = await fetch(endpoint)\n        const data = await res.json()\n\n        const currentUrl = new URL(window.location)\n\n        const filters = (data.filters || []).map(f => {\n            f.key = `filter[${f._id}]`\n            f.unit = f.unit || \"\"\n            const param = currentUrl.searchParams.get(f.key) || \"\"\n            f.selection = param.split(\"|\").filter(f => f)\n            return f\n        })\n\n        // console.log(resultId, this.resultId)\n        if (resultId == this.resultId) {\n            Object.assign(this, {\n                page: data.page,\n                limit: data.limit,\n                count: data.count,\n                filters: filters,\n                products: data.products || []\n            })\n        }\n    }\n\n    async navigate(scroll = true) {\n        const url = new URL(window.location)\n        const scrollOptions = {\n            behavior: \"smooth\",\n            block: \"start\",\n            inline: \"nearest\"\n        }\n        const rect = this.getBoundingClientRect()\n        const shouldScroll =\n            scroll && this.scrollIntoView && rect && rect.y && rect.y < 0\n        const searchString = this.search\n\n        if (url.toString() != this.url.toString()) {\n            if (searchString) {\n                await this.fetchSearch(url, searchString)\n            } else {\n                await this.fetch(url)\n            }\n            if (shouldScroll) {\n                this.root\n                    .querySelector(\".results\")\n                    .scrollIntoView(scrollOptions)\n            }\n        }\n    }\n\n    firstUpdated() {\n        document.addEventListener(\"didNavigate\", () => this.navigate())\n        this.navigate(false)\n    }\n\n    get h1() {\n        return document.querySelector(\".page-title h1\")\n    }\n\n    set h1(value) {\n        const h = this.h1\n        if (h) h.innerText = value\n    }\n\n    render() {\n        this.h1 = this.title\n\n        if (this.type !== \"category\") {\n            return html``\n        }\n\n        const toggleFilters = ev => {\n            ev.preventDefault()\n            this.showfilter = !this.showfilter\n            return false\n        }\n\n        return html`\n            <div class=\"filters ${this.showfilter ? \"showfilter\" : \"\"}\">\n                <div class=\"mobile-filter-toggle\">\n                    <a href=\"#\" @click=${toggleFilters}>Filter Results</a>\n                </div>\n                ${this.filters.map(\n                    f => html`\n                        <shop-category-filter\n                            .key=${f.key}\n                            .display_name=${f.display_name}\n                            .type=${f.type}\n                            .values=${f.values}\n                            .selection=${f.selection}\n                            .unit=${f.unit}\n                            .presets=${f.presets}\n                        ></shop-category-filter>\n                    `\n                )}\n            </div>\n            <div class=\"results\">\n                ${this.products === null\n                    ? html` <p>Loading</p> `\n                    : html`\n                          ${this.products.length\n                              ? html`\n                                    ${this.products.map(\n                                        p => html`\n                                            <shop-category-product\n                                                .priceExcl=${p.priceExcl}\n                                                .url=${p.url}\n                                                .title=${p.title}\n                                                .fulltitle=${p.fulltitle}\n                                                .image_url=${p.image_url}\n                                                .product_set=${p.product_set}\n                                                .variants=${p.variants}\n                                            ></shop-category-product>\n                                        `\n                                    )}\n                                `\n                              : html` <p>No results</p> `}\n                      `}\n                <shop-category-pagination\n                    .page=${this.page}\n                    .limit=${this.limit}\n                    .count=${this.count}\n                ></shop-category-pagination>\n            </div>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\n\nexport class ShopCategoryProduct extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n            a {\n                display: block;\n                text-decoration: none;\n                color: #313333;\n            }\n            .product-image {\n                background-color: rgba(255, 253, 240, 0.3);\n                padding: 50%;\n                background-size: cover;\n                background-position: center;\n            }\n            .variants {\n                margin: 0.5rem 0;\n                display: grid;\n                grid-template-columns: repeat(5, 1fr);\n                gap: 0.5rem;\n            }\n            .price {\n                color: #ff4438;\n                font-weight: 600;\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            priceExcl: { type: String },\n            url: { type: String },\n            title: { type: String },\n            fulltitle: { type: String },\n            image_url: { type: String },\n            product_set: { type: Object },\n            variants: { type: Array }\n        }\n    }\n\n    get price() {\n        const x = parseFloat(this.priceExcl).toFixed(2)\n        return x == \"0.00\" ? \"Call for pricing\" : `$${x}`\n    }\n\n    sized(url, size) {\n        if (!url) return \"\"\n        const u = new URL(url)\n        const components = u.pathname.split(\"/\")\n        const filename = components.pop()\n        const sz = `${size}x${size}x1`\n        components.push(sz)\n        components.push(filename)\n        u.pathname = components.join(\"/\")\n        return u.toString()\n    }\n\n    render() {\n        const img = this.sized(this.image_url, 400)\n\n        const singular = this.variants.length == 0\n\n        return html`\n            <a href=\"/${this.url}.html\" title=${this.title}>\n                <div\n                    class=\"product-image\"\n                    style=\"background-image: url(${img})\"\n                ></div>\n            </a>\n            ${singular\n                ? html``\n                : html`\n                      <div class=\"variants\">\n                          ${this.variants.slice(0, 5).map(v => {\n                              const img = this.sized(v.image_url, 80)\n\n                              return html`\n                                  <a href=\"/${v.url}.html\" title=${v.title}>\n                                      <div\n                                          class=\"product-image\"\n                                          style=\"background-image: url(${img})\"\n                                      ></div>\n                                  </a>\n                              `\n                          })}\n                      </div>\n                  `}\n            <a href=\"/${this.url}.html\">\n                <div>${this.fulltitle}</div>\n                <div class=\"price\">${this.price}${singular ? \"\" : \" ±\"}</div>\n            </a>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\n\nexport class ShopCategoryPagination extends BaseElement {\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n                text-align: right;\n                padding: 1rem 0;\n                margin: 1rem 0;\n            }\n            b-btn {\n                --theme: transparent;\n                --color: transparent;\n                --textColor: #456;\n                padding: 4px 0.25rem;\n            }\n            b-btn.active {\n                --theme: #ff4438;\n                --color: #ff4438;\n                --textColor: #fff;\n            }\n            b-btn-group {\n                border: 1px solid #9e9e9e;\n                border-radius: 5px;\n            }\n            b-btn:before {\n                font-family: hfont !important;\n                position: absolute;\n                top: 9px;\n                left: 9px;\n            }\n            b-btn.next:before {\n                content: var(--icon-content-caret-right);\n            }\n            b-btn.prev:before {\n                content: var(--icon-content-caret-left);\n            }\n        `\n    }\n\n    static get properties() {\n        return {\n            page: { type: Number },\n            limit: { type: Number },\n            count: { type: Number }\n        }\n    }\n\n    get pageCount() {\n        return Math.ceil(this.count / this.limit)\n    }\n\n    get pages() {\n        const output = {}\n        const pages = [...new Array(this.pageCount)].map((_, index) => {\n            const number = index + 1\n            return {\n                number,\n                index,\n                current: number == this.page,\n                next: this.page + 1 == number,\n                prev: this.page - 1 == number,\n                showInPagination: [-2, -1, 0, 1, 2].includes(this.page - number)\n            }\n        })\n\n        if (this.pageCount > 8) {\n            output.limitStart = this.page > 3\n            output.limitEnd = this.pageCount - this.page > 2\n            output.limitPages = true\n            output.entries = pages.filter(p => p.showInPagination)\n        } else {\n            output.limitPages = false\n            output.entries = pages\n        }\n\n        return output\n    }\n\n    render() {\n        if (!(this.page && this.limit)) return html``\n        const pages = this.pages\n        if (pages.length == 1) return html``\n        const prev = pages.entries.find(p => p.prev)\n        const next = pages.entries.find(p => p.next)\n        const nav = page => ev => {\n            this.trigger(\"page\", page)\n        }\n        return html`\n            <b-btn-group>\n                ${prev\n                    ? html`\n                          <b-btn class=\"prev\" @click=${nav(prev.number)}\n                              >&nbsp;</b-btn\n                          >\n                      `\n                    : html``}\n                ${pages.limitPages && pages.limitStart\n                    ? html` <b-btn>&hellip;</b-btn> `\n                    : html``}\n                ${pages.entries.map(\n                    p =>\n                        html`\n                            <b-btn\n                                class=${p.current ? \"active\" : \"\"}\n                                @click=${nav(p.number)}\n                            >\n                                ${p.number}\n                            </b-btn>\n                        `\n                )}\n                ${pages.limitPages && pages.limitEnd\n                    ? html` <b-btn>&hellip;</b-btn> `\n                    : html``}\n                ${next\n                    ? html`\n                          <b-btn class=\"next\" @click=${nav(next.number)}\n                              >&nbsp;</b-btn\n                          >\n                      `\n                    : html``}\n            </b-btn-group>\n        `\n    }\n}\n","import { BaseElement, html, css } from \"./BaseElement.js\"\n\nexport class ShopWishlist extends BaseElement {\n    static get properties() {\n        return {\n            accountid: { type: String },\n            wishlist: { type: Object }\n        }\n    }\n    static get styles() {\n        return css`\n            :host {\n                display: none;\n            }\n        `\n    }\n\n    updateEvent() {\n        const ev = new CustomEvent(\"wishlist\", {\n            detail: this,\n            bubbles: true,\n            composed: true\n        })\n        document.querySelector(\"body\").dispatchEvent(ev)\n    }\n\n    async firstUpdated() {\n        try {\n            if (this.accountid) {\n                this.wishlist = await (\n                    await fetch(\"/account/wishlist/?format=json\")\n                ).json()\n            } else {\n                this.wishlist = {}\n            }\n            this.updateEvent()\n        } catch (err) {\n            console.log({ err })\n        }\n    }\n    render() {\n        return html``\n    }\n}\n"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","value","getHTML","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","constructor","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","delete","BaseElement","root","shadowRoot","val","localStorage","getItem","setItem","detail","bubbles","composed","ev","CustomEvent","dispatchEvent","callback","url","URL","location","tid","searchParams","event_category","event_label","gtag","ga","eventAction","eventCategory","eventLabel","history","pushState","title","didNavigate","page_title","page_location","href","page_path","pathname","categories","fetch","siteConfig","categoryEndpoint","json","toImp","round","parseFloat","toMM","ShopControl","selection","filterid","replace","define","$wrapper","concat","filter","trigger","wrapperClass","includes","autoconvert","label","min","max","unit","displayUnit","vals","curr","Infinity","updateSelection","inputChange","target","impInputChange","settingid","displayDefault","getOption","setOption","presets","mcat","isActive","preset","find","clickTrack","UA","navigator","userAgent","HandheldScanners","device","is_ios","isiOS","is_android","isAndroid","is_mobile","isMobile","isWindows","test","isMac","isLinux","minScreenSize","outerWidth","outerHeight","isSmallDevice","standalone","isiPad","isTouch","isHandheldScanner","patt","isiOSChrome","isElectron","electronVersion","matches","isChromeInstalledApp","isInstalled","matchMedia","isStandalone","documentElement","classList","toggle","step","range","mouseUp","bind","mouseMove","valMin","valMax","toFixed","oldVal","oldMin","oldMax","sort","a","b","_polishVal","requestUpdate","dmin","abs","dmax","_active","_mouseDown","_didChange","setPropOn","parentElement","setProperty","mouseDown","disconnectedCallback","_len","_minLeft","_maxLeft","_trackLength","atMin","atMax","which","pageX","_lastMousePos","rect","getBoundingClientRect","offset","x","y","touches","screenX","clientWidth","TouchRippleElement","temp","animate","remove","hide","setTimeout","CheckBoxElement","ripple","_onClick","code","relatedTarget","enter","hasAttribute","disabled","checked","SpinnerElement","SVG_ICONS","hasWarnedNoIcons","IconElement","icons","icon","d","firstElementChild","id","registerIcon","_svg","svg","newValue","_setSVG","spin","toggleAttribute","cols","keys","open","current","subs","search","breadcrumbs","path","reverse","c","init","stub","shift","asort","parseInt","sortOrder","bsort","navigate","tiles","headerHeight","tops","pos","headerPosition","top","height","nav","preventDefault","fixHeaderHeights","page","sub","description","image_url","image","h","offsetTop","offsetHeight","px","defaultImage","defaultImageBase64","btoa","limit","filters","products","showfilter","resultId","innerWidth","currentFetch","on","entries","toString","endpoint","collectionEndpoint","abort","slug","category","origin","request","opts","controller","AbortController","signal","ready","aFetch","currentUrl","f","_id","param","log","searchString","scroll","scrollOptions","behavior","block","inline","shouldScroll","scrollIntoView","fetchSearch","h1","innerText","display_name","priceExcl","fulltitle","product_set","variants","price","u","components","filename","sz","img","sized","singular","mainClass","toggleClass","selectionClass","imperialPresets","metricPresets","showUnitPresets","presetDisplayUnit","setUnit","pageCount","ceil","pages","output","_","number","next","prev","showInPagination","limitStart","limitEnd","limitPages","accountid","wishlist","updateEvent","err"],"mappings":"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"}